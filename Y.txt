Step_1: Print: Moves for 3 disk problem.
Step_2: (1) Start recursive function (count = 9, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3: Checking a variable “count” more than 0 (true)
Step_4: (2) New recursive function (count = 8, needle1 = 1, needle2 = 3, needle3 = 2)
Step_5: Checking a variable “count” more than 0 (true)
Step_6: (3) New recursive function (count = 7, needle1 = 1, needle2 = 2, needle3 = 3)
Step_7: Checking a variable “count” more than 0 (true)
Step_8: (4) New recursive function (count = 6, needle1 = 1, needle2 = 3, needle3 = 2)
Step_9: Checking a variable “count” more than 0 (true)
Step_10: (5) New recursive function (count = 5, needle1 = 1, needle2 = 2, needle3 = 3)
Step_11: Checking a variable “count” more than 0 (true)
Step_12: (6) New recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_13: Checking a variable “count” more than 0 (true)
Step_14: (7) New recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_15: Checking a variable “count” more than 0 (true)
Step_16: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_17: Checking a variable “count” more than 0 (true)
Step_18: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_19: Checking a variable “count” more than 0 (true)
Step_20: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_21: Checking a variable “count” more than 0 (false)
Step_22: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_23: Print variable (count)(needle1)(needle3)
Step_24: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_25: Checking a variable “count” more than 0 (false)
Step_26: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_27: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_28: Print variable (count)(needle1)(needle3)
Step_29: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_30: Checking a variable “count” more than 0 (true)
Step_31: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_32: Checking a variable “count” more than 0 (false)
Step_33: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_34: Print variable (count)(needle1)(needle3)
Step_35: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_36: Checking a variable “count” more than 0 (false)
Step_37: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_38: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_39: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_40: Print variable (count)(needle1)(needle3)
Step_41: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_42: Checking a variable “count” more than 0 (true)
Step_43: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_44: Checking a variable “count” more than 0 (true)
Step_45: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_46: Checking a variable “count” more than 0 (false)
Step_47: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_48: Print variable (count)(needle1)(needle3)
Step_49: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_50: Checking a variable “count” more than 0 (false)
Step_51: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_52: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_53: Print variable (count)(needle1)(needle3)
Step_54: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_55: Checking a variable “count” more than 0 (true)
Step_56: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_57: Checking a variable “count” more than 0 (false)
Step_58: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_59: Print variable (count)(needle1)(needle3)
Step_60: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_61: Checking a variable “count” more than 0 (false)
Step_62: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_63: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_64: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_65: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_66: Print variable (count)(needle1)(needle3)
Step_67: (7) New recursive function (count = 3, needle1 = 3, needle2 = 2, needle3 = 1)
Step_68: Checking a variable “count” more than 0 (true)
Step_69: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_70: Checking a variable “count” more than 0 (true)
Step_71: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_72: Checking a variable “count” more than 0 (true)
Step_73: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_74: Checking a variable “count” more than 0 (false)
Step_75: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_76: Print variable (count)(needle1)(needle3)
Step_77: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_78: Checking a variable “count” more than 0 (false)
Step_79: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_80: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_81: Print variable (count)(needle1)(needle3)
Step_82: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_83: Checking a variable “count” more than 0 (true)
Step_84: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_85: Checking a variable “count” more than 0 (false)
Step_86: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_87: Print variable (count)(needle1)(needle3)
Step_88: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_89: Checking a variable “count” more than 0 (false)
Step_90: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_91: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_92: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_93: Print variable (count)(needle1)(needle3)
Step_94: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_95: Checking a variable “count” more than 0 (true)
Step_96: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_97: Checking a variable “count” more than 0 (true)
Step_98: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_99: Checking a variable “count” more than 0 (false)
Step_100: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_101: Print variable (count)(needle1)(needle3)
Step_102: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_103: Checking a variable “count” more than 0 (false)
Step_104: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_105: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_106: Print variable (count)(needle1)(needle3)
Step_107: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_108: Checking a variable “count” more than 0 (true)
Step_109: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_110: Checking a variable “count” more than 0 (false)
Step_111: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_112: Print variable (count)(needle1)(needle3)
Step_113: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_114: Checking a variable “count” more than 0 (false)
Step_115: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_116: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_117: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_118: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_119: (6) Collapsing recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_120: Print variable (count)(needle1)(needle3)
Step_121: (6) New recursive function (count = 4, needle1 = 2, needle2 = 3, needle3 = 1)
Step_122: Checking a variable “count” more than 0 (true)
Step_123: (7) New recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_124: Checking a variable “count” more than 0 (true)
Step_125: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_126: Checking a variable “count” more than 0 (true)
Step_127: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_128: Checking a variable “count” more than 0 (true)
Step_129: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_130: Checking a variable “count” more than 0 (false)
Step_131: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_132: Print variable (count)(needle1)(needle3)
Step_133: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_134: Checking a variable “count” more than 0 (false)
Step_135: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_136: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_137: Print variable (count)(needle1)(needle3)
Step_138: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_139: Checking a variable “count” more than 0 (true)
Step_140: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_141: Checking a variable “count” more than 0 (false)
Step_142: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_143: Print variable (count)(needle1)(needle3)
Step_144: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_145: Checking a variable “count” more than 0 (false)
Step_146: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_147: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_148: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_149: Print variable (count)(needle1)(needle3)
Step_150: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_151: Checking a variable “count” more than 0 (true)
Step_152: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_153: Checking a variable “count” more than 0 (true)
Step_154: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_155: Checking a variable “count” more than 0 (false)
Step_156: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_157: Print variable (count)(needle1)(needle3)
Step_158: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_159: Checking a variable “count” more than 0 (false)
Step_160: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_161: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_162: Print variable (count)(needle1)(needle3)
Step_163: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_164: Checking a variable “count” more than 0 (true)
Step_165: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_166: Checking a variable “count” more than 0 (false)
Step_167: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_168: Print variable (count)(needle1)(needle3)
Step_169: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_170: Checking a variable “count” more than 0 (false)
Step_171: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_172: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_173: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_174: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_175: Print variable (count)(needle1)(needle3)
Step_176: (7) New recursive function (count = 3, needle1 = 1, needle2 = 3, needle3 = 2)
Step_177: Checking a variable “count” more than 0 (true)
Step_178: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_179: Checking a variable “count” more than 0 (true)
Step_180: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_181: Checking a variable “count” more than 0 (true)
Step_182: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_183: Checking a variable “count” more than 0 (false)
Step_184: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_185: Print variable (count)(needle1)(needle3)
Step_186: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_187: Checking a variable “count” more than 0 (false)
Step_188: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_189: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_190: Print variable (count)(needle1)(needle3)
Step_191: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_192: Checking a variable “count” more than 0 (true)
Step_193: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_194: Checking a variable “count” more than 0 (false)
Step_195: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_196: Print variable (count)(needle1)(needle3)
Step_197: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_198: Checking a variable “count” more than 0 (false)
Step_199: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_200: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_201: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_202: Print variable (count)(needle1)(needle3)
Step_203: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_204: Checking a variable “count” more than 0 (true)
Step_205: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_206: Checking a variable “count” more than 0 (true)
Step_207: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_208: Checking a variable “count” more than 0 (false)
Step_209: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_210: Print variable (count)(needle1)(needle3)
Step_211: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_212: Checking a variable “count” more than 0 (false)
Step_213: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_214: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_215: Print variable (count)(needle1)(needle3)
Step_216: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_217: Checking a variable “count” more than 0 (true)
Step_218: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_219: Checking a variable “count” more than 0 (false)
Step_220: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_221: Print variable (count)(needle1)(needle3)
Step_222: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_223: Checking a variable “count” more than 0 (false)
Step_224: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_225: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_226: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_227: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_228: (6) Collapsing recursive function (count = 4, needle1 = 2, needle2 = 1, needle3 = 3)
Step_229: (5) Collapsing recursive function (count = 5, needle1 = 1, needle2 = 2, needle3 = 3)
Step_230: Print variable (count)(needle1)(needle3)
Step_231: (5) New recursive function (count = 5, needle1 = 3, needle2 = 2, needle3 = 1)
Step_232: Checking a variable “count” more than 0 (true)
Step_233: (6) New recursive function (count = 4, needle1 = 3, needle2 = 2, needle3 = 1)
Step_234: Checking a variable “count” more than 0 (true)
Step_235: (7) New recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_236: Checking a variable “count” more than 0 (true)
Step_237: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_238: Checking a variable “count” more than 0 (true)
Step_239: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_240: Checking a variable “count” more than 0 (true)
Step_241: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_242: Checking a variable “count” more than 0 (false)
Step_243: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_244: Print variable (count)(needle1)(needle3)
Step_245: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_246: Checking a variable “count” more than 0 (false)
Step_247: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_248: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_249: Print variable (count)(needle1)(needle3)
Step_250: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_251: Checking a variable “count” more than 0 (true)
Step_252: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_253: Checking a variable “count” more than 0 (false)
Step_254: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_255: Print variable (count)(needle1)(needle3)
Step_256: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_257: Checking a variable “count” more than 0 (false)
Step_258: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_259: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_260: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_261: Print variable (count)(needle1)(needle3)
Step_262: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_263: Checking a variable “count” more than 0 (true)
Step_264: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_265: Checking a variable “count” more than 0 (true)
Step_266: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_267: Checking a variable “count” more than 0 (false)
Step_268: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_269: Print variable (count)(needle1)(needle3)
Step_270: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_271: Checking a variable “count” more than 0 (false)
Step_272: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_273: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_274: Print variable (count)(needle1)(needle3)
Step_275: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_276: Checking a variable “count” more than 0 (true)
Step_277: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_278: Checking a variable “count” more than 0 (false)
Step_279: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_280: Print variable (count)(needle1)(needle3)
Step_281: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_282: Checking a variable “count” more than 0 (false)
Step_283: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_284: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_285: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_286: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_287: Print variable (count)(needle1)(needle3)
Step_288: (7) New recursive function (count = 3, needle1 = 2, needle2 = 1, needle3 = 3)
Step_289: Checking a variable “count” more than 0 (true)
Step_290: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_291: Checking a variable “count” more than 0 (true)
Step_292: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_293: Checking a variable “count” more than 0 (true)
Step_294: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_295: Checking a variable “count” more than 0 (false)
Step_296: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_297: Print variable (count)(needle1)(needle3)
Step_298: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_299: Checking a variable “count” more than 0 (false)
Step_300: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_301: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_302: Print variable (count)(needle1)(needle3)
Step_303: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_304: Checking a variable “count” more than 0 (true)
Step_305: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_306: Checking a variable “count” more than 0 (false)
Step_307: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_308: Print variable (count)(needle1)(needle3)
Step_309: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_310: Checking a variable “count” more than 0 (false)
Step_311: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_312: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_313: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_314: Print variable (count)(needle1)(needle3)
Step_315: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_316: Checking a variable “count” more than 0 (true)
Step_317: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_318: Checking a variable “count” more than 0 (true)
Step_319: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_320: Checking a variable “count” more than 0 (false)
Step_321: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_322: Print variable (count)(needle1)(needle3)
Step_323: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_324: Checking a variable “count” more than 0 (false)
Step_325: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_326: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_327: Print variable (count)(needle1)(needle3)
Step_328: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_329: Checking a variable “count” more than 0 (true)
Step_330: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_331: Checking a variable “count” more than 0 (false)
Step_332: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_333: Print variable (count)(needle1)(needle3)
Step_334: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_335: Checking a variable “count” more than 0 (false)
Step_336: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_337: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_338: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_339: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_340: (6) Collapsing recursive function (count = 4, needle1 = 3, needle2 = 2, needle3 = 1)
Step_341: Print variable (count)(needle1)(needle3)
Step_342: (6) New recursive function (count = 4, needle1 = 1, needle2 = 2, needle3 = 3)
Step_343: Checking a variable “count” more than 0 (true)
Step_344: (7) New recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_345: Checking a variable “count” more than 0 (true)
Step_346: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_347: Checking a variable “count” more than 0 (true)
Step_348: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_349: Checking a variable “count” more than 0 (true)
Step_350: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_351: Checking a variable “count” more than 0 (false)
Step_352: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_353: Print variable (count)(needle1)(needle3)
Step_354: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_355: Checking a variable “count” more than 0 (false)
Step_356: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_357: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_358: Print variable (count)(needle1)(needle3)
Step_359: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_360: Checking a variable “count” more than 0 (true)
Step_361: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_362: Checking a variable “count” more than 0 (false)
Step_363: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_364: Print variable (count)(needle1)(needle3)
Step_365: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_366: Checking a variable “count” more than 0 (false)
Step_367: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_368: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_369: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_370: Print variable (count)(needle1)(needle3)
Step_371: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_372: Checking a variable “count” more than 0 (true)
Step_373: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_374: Checking a variable “count” more than 0 (true)
Step_375: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_376: Checking a variable “count” more than 0 (false)
Step_377: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_378: Print variable (count)(needle1)(needle3)
Step_379: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_380: Checking a variable “count” more than 0 (false)
Step_381: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_382: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_383: Print variable (count)(needle1)(needle3)
Step_384: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_385: Checking a variable “count” more than 0 (true)
Step_386: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_387: Checking a variable “count” more than 0 (false)
Step_388: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_389: Print variable (count)(needle1)(needle3)
Step_390: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_391: Checking a variable “count” more than 0 (false)
Step_392: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_393: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_394: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_395: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_396: Print variable (count)(needle1)(needle3)
Step_397: (7) New recursive function (count = 3, needle1 = 3, needle2 = 2, needle3 = 1)
Step_398: Checking a variable “count” more than 0 (true)
Step_399: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_400: Checking a variable “count” more than 0 (true)
Step_401: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_402: Checking a variable “count” more than 0 (true)
Step_403: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_404: Checking a variable “count” more than 0 (false)
Step_405: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_406: Print variable (count)(needle1)(needle3)
Step_407: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_408: Checking a variable “count” more than 0 (false)
Step_409: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_410: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_411: Print variable (count)(needle1)(needle3)
Step_412: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_413: Checking a variable “count” more than 0 (true)
Step_414: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_415: Checking a variable “count” more than 0 (false)
Step_416: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_417: Print variable (count)(needle1)(needle3)
Step_418: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_419: Checking a variable “count” more than 0 (false)
Step_420: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_421: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_422: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_423: Print variable (count)(needle1)(needle3)
Step_424: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_425: Checking a variable “count” more than 0 (true)
Step_426: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_427: Checking a variable “count” more than 0 (true)
Step_428: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_429: Checking a variable “count” more than 0 (false)
Step_430: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_431: Print variable (count)(needle1)(needle3)
Step_432: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_433: Checking a variable “count” more than 0 (false)
Step_434: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_435: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_436: Print variable (count)(needle1)(needle3)
Step_437: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_438: Checking a variable “count” more than 0 (true)
Step_439: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_440: Checking a variable “count” more than 0 (false)
Step_441: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_442: Print variable (count)(needle1)(needle3)
Step_443: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_444: Checking a variable “count” more than 0 (false)
Step_445: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_446: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_447: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_448: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_449: (6) Collapsing recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_450: (5) Collapsing recursive function (count = 5, needle1 = 3, needle2 = 1, needle3 = 2)
Step_451: (4) Collapsing recursive function (count = 6, needle1 = 1, needle2 = 3, needle3 = 2)
Step_452: Print variable (count)(needle1)(needle3)
Step_453: (4) New recursive function (count = 6, needle1 = 2, needle2 = 3, needle3 = 1)
Step_454: Checking a variable “count” more than 0 (true)
Step_455: (5) New recursive function (count = 5, needle1 = 2, needle2 = 3, needle3 = 1)
Step_456: Checking a variable “count” more than 0 (true)
Step_457: (6) New recursive function (count = 4, needle1 = 2, needle2 = 1, needle3 = 3)
Step_458: Checking a variable “count” more than 0 (true)
Step_459: (7) New recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_460: Checking a variable “count” more than 0 (true)
Step_461: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_462: Checking a variable “count” more than 0 (true)
Step_463: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_464: Checking a variable “count” more than 0 (true)
Step_465: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_466: Checking a variable “count” more than 0 (false)
Step_467: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_468: Print variable (count)(needle1)(needle3)
Step_469: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_470: Checking a variable “count” more than 0 (false)
Step_471: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_472: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_473: Print variable (count)(needle1)(needle3)
Step_474: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_475: Checking a variable “count” more than 0 (true)
Step_476: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_477: Checking a variable “count” more than 0 (false)
Step_478: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_479: Print variable (count)(needle1)(needle3)
Step_480: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_481: Checking a variable “count” more than 0 (false)
Step_482: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_483: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_484: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_485: Print variable (count)(needle1)(needle3)
Step_486: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_487: Checking a variable “count” more than 0 (true)
Step_488: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_489: Checking a variable “count” more than 0 (true)
Step_490: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_491: Checking a variable “count” more than 0 (false)
Step_492: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_493: Print variable (count)(needle1)(needle3)
Step_494: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_495: Checking a variable “count” more than 0 (false)
Step_496: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_497: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_498: Print variable (count)(needle1)(needle3)
Step_499: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_500: Checking a variable “count” more than 0 (true)
Step_501: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_502: Checking a variable “count” more than 0 (false)
Step_503: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_504: Print variable (count)(needle1)(needle3)
Step_505: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_506: Checking a variable “count” more than 0 (false)
Step_507: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_508: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_509: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_510: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_511: Print variable (count)(needle1)(needle3)
Step_512: (7) New recursive function (count = 3, needle1 = 1, needle2 = 3, needle3 = 2)
Step_513: Checking a variable “count” more than 0 (true)
Step_514: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_515: Checking a variable “count” more than 0 (true)
Step_516: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_517: Checking a variable “count” more than 0 (true)
Step_518: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_519: Checking a variable “count” more than 0 (false)
Step_520: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_521: Print variable (count)(needle1)(needle3)
Step_522: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_523: Checking a variable “count” more than 0 (false)
Step_524: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_525: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_526: Print variable (count)(needle1)(needle3)
Step_527: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_528: Checking a variable “count” more than 0 (true)
Step_529: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_530: Checking a variable “count” more than 0 (false)
Step_531: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_532: Print variable (count)(needle1)(needle3)
Step_533: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_534: Checking a variable “count” more than 0 (false)
Step_535: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_536: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_537: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_538: Print variable (count)(needle1)(needle3)
Step_539: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_540: Checking a variable “count” more than 0 (true)
Step_541: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_542: Checking a variable “count” more than 0 (true)
Step_543: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_544: Checking a variable “count” more than 0 (false)
Step_545: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_546: Print variable (count)(needle1)(needle3)
Step_547: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_548: Checking a variable “count” more than 0 (false)
Step_549: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_550: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_551: Print variable (count)(needle1)(needle3)
Step_552: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_553: Checking a variable “count” more than 0 (true)
Step_554: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_555: Checking a variable “count” more than 0 (false)
Step_556: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_557: Print variable (count)(needle1)(needle3)
Step_558: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_559: Checking a variable “count” more than 0 (false)
Step_560: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_561: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_562: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_563: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_564: (6) Collapsing recursive function (count = 4, needle1 = 2, needle2 = 1, needle3 = 3)
Step_565: Print variable (count)(needle1)(needle3)
Step_566: (6) New recursive function (count = 4, needle1 = 3, needle2 = 1, needle3 = 2)
Step_567: Checking a variable “count” more than 0 (true)
Step_568: (7) New recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_569: Checking a variable “count” more than 0 (true)
Step_570: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_571: Checking a variable “count” more than 0 (true)
Step_572: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_573: Checking a variable “count” more than 0 (true)
Step_574: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_575: Checking a variable “count” more than 0 (false)
Step_576: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_577: Print variable (count)(needle1)(needle3)
Step_578: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_579: Checking a variable “count” more than 0 (false)
Step_580: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_581: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_582: Print variable (count)(needle1)(needle3)
Step_583: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_584: Checking a variable “count” more than 0 (true)
Step_585: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_586: Checking a variable “count” more than 0 (false)
Step_587: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_588: Print variable (count)(needle1)(needle3)
Step_589: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_590: Checking a variable “count” more than 0 (false)
Step_591: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_592: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_593: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_594: Print variable (count)(needle1)(needle3)
Step_595: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_596: Checking a variable “count” more than 0 (true)
Step_597: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_598: Checking a variable “count” more than 0 (true)
Step_599: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_600: Checking a variable “count” more than 0 (false)
Step_601: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_602: Print variable (count)(needle1)(needle3)
Step_603: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_604: Checking a variable “count” more than 0 (false)
Step_605: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_606: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_607: Print variable (count)(needle1)(needle3)
Step_608: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_609: Checking a variable “count” more than 0 (true)
Step_610: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_611: Checking a variable “count” more than 0 (false)
Step_612: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_613: Print variable (count)(needle1)(needle3)
Step_614: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_615: Checking a variable “count” more than 0 (false)
Step_616: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_617: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_618: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_619: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_620: Print variable (count)(needle1)(needle3)
Step_621: (7) New recursive function (count = 3, needle1 = 2, needle2 = 1, needle3 = 3)
Step_622: Checking a variable “count” more than 0 (true)
Step_623: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_624: Checking a variable “count” more than 0 (true)
Step_625: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_626: Checking a variable “count” more than 0 (true)
Step_627: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_628: Checking a variable “count” more than 0 (false)
Step_629: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_630: Print variable (count)(needle1)(needle3)
Step_631: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_632: Checking a variable “count” more than 0 (false)
Step_633: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_634: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_635: Print variable (count)(needle1)(needle3)
Step_636: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_637: Checking a variable “count” more than 0 (true)
Step_638: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_639: Checking a variable “count” more than 0 (false)
Step_640: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_641: Print variable (count)(needle1)(needle3)
Step_642: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_643: Checking a variable “count” more than 0 (false)
Step_644: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_645: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_646: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_647: Print variable (count)(needle1)(needle3)
Step_648: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_649: Checking a variable “count” more than 0 (true)
Step_650: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_651: Checking a variable “count” more than 0 (true)
Step_652: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_653: Checking a variable “count” more than 0 (false)
Step_654: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_655: Print variable (count)(needle1)(needle3)
Step_656: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_657: Checking a variable “count” more than 0 (false)
Step_658: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_659: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_660: Print variable (count)(needle1)(needle3)
Step_661: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_662: Checking a variable “count” more than 0 (true)
Step_663: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_664: Checking a variable “count” more than 0 (false)
Step_665: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_666: Print variable (count)(needle1)(needle3)
Step_667: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_668: Checking a variable “count” more than 0 (false)
Step_669: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_670: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_671: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_672: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_673: (6) Collapsing recursive function (count = 4, needle1 = 3, needle2 = 2, needle3 = 1)
Step_674: (5) Collapsing recursive function (count = 5, needle1 = 2, needle2 = 3, needle3 = 1)
Step_675: Print variable (count)(needle1)(needle3)
Step_676: (5) New recursive function (count = 5, needle1 = 1, needle2 = 3, needle3 = 2)
Step_677: Checking a variable “count” more than 0 (true)
Step_678: (6) New recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_679: Checking a variable “count” more than 0 (true)
Step_680: (7) New recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_681: Checking a variable “count” more than 0 (true)
Step_682: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_683: Checking a variable “count” more than 0 (true)
Step_684: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_685: Checking a variable “count” more than 0 (true)
Step_686: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_687: Checking a variable “count” more than 0 (false)
Step_688: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_689: Print variable (count)(needle1)(needle3)
Step_690: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_691: Checking a variable “count” more than 0 (false)
Step_692: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_693: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_694: Print variable (count)(needle1)(needle3)
Step_695: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_696: Checking a variable “count” more than 0 (true)
Step_697: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_698: Checking a variable “count” more than 0 (false)
Step_699: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_700: Print variable (count)(needle1)(needle3)
Step_701: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_702: Checking a variable “count” more than 0 (false)
Step_703: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_704: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_705: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_706: Print variable (count)(needle1)(needle3)
Step_707: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_708: Checking a variable “count” more than 0 (true)
Step_709: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_710: Checking a variable “count” more than 0 (true)
Step_711: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_712: Checking a variable “count” more than 0 (false)
Step_713: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_714: Print variable (count)(needle1)(needle3)
Step_715: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_716: Checking a variable “count” more than 0 (false)
Step_717: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_718: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_719: Print variable (count)(needle1)(needle3)
Step_720: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_721: Checking a variable “count” more than 0 (true)
Step_722: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_723: Checking a variable “count” more than 0 (false)
Step_724: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_725: Print variable (count)(needle1)(needle3)
Step_726: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_727: Checking a variable “count” more than 0 (false)
Step_728: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_729: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_730: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_731: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_732: Print variable (count)(needle1)(needle3)
Step_733: (7) New recursive function (count = 3, needle1 = 3, needle2 = 2, needle3 = 1)
Step_734: Checking a variable “count” more than 0 (true)
Step_735: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_736: Checking a variable “count” more than 0 (true)
Step_737: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_738: Checking a variable “count” more than 0 (true)
Step_739: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_740: Checking a variable “count” more than 0 (false)
Step_741: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_742: Print variable (count)(needle1)(needle3)
Step_743: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_744: Checking a variable “count” more than 0 (false)
Step_745: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_746: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_747: Print variable (count)(needle1)(needle3)
Step_748: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_749: Checking a variable “count” more than 0 (true)
Step_750: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_751: Checking a variable “count” more than 0 (false)
Step_752: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_753: Print variable (count)(needle1)(needle3)
Step_754: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_755: Checking a variable “count” more than 0 (false)
Step_756: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_757: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_758: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_759: Print variable (count)(needle1)(needle3)
Step_760: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_761: Checking a variable “count” more than 0 (true)
Step_762: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_763: Checking a variable “count” more than 0 (true)
Step_764: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_765: Checking a variable “count” more than 0 (false)
Step_766: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_767: Print variable (count)(needle1)(needle3)
Step_768: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_769: Checking a variable “count” more than 0 (false)
Step_770: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_771: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_772: Print variable (count)(needle1)(needle3)
Step_773: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_774: Checking a variable “count” more than 0 (true)
Step_775: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_776: Checking a variable “count” more than 0 (false)
Step_777: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_778: Print variable (count)(needle1)(needle3)
Step_779: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_780: Checking a variable “count” more than 0 (false)
Step_781: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_782: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_783: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_784: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_785: (6) Collapsing recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_786: Print variable (count)(needle1)(needle3)
Step_787: (6) New recursive function (count = 4, needle1 = 2, needle2 = 3, needle3 = 1)
Step_788: Checking a variable “count” more than 0 (true)
Step_789: (7) New recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_790: Checking a variable “count” more than 0 (true)
Step_791: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_792: Checking a variable “count” more than 0 (true)
Step_793: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_794: Checking a variable “count” more than 0 (true)
Step_795: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_796: Checking a variable “count” more than 0 (false)
Step_797: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_798: Print variable (count)(needle1)(needle3)
Step_799: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_800: Checking a variable “count” more than 0 (false)
Step_801: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_802: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_803: Print variable (count)(needle1)(needle3)
Step_804: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_805: Checking a variable “count” more than 0 (true)
Step_806: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_807: Checking a variable “count” more than 0 (false)
Step_808: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_809: Print variable (count)(needle1)(needle3)
Step_810: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_811: Checking a variable “count” more than 0 (false)
Step_812: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_813: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_814: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_815: Print variable (count)(needle1)(needle3)
Step_816: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_817: Checking a variable “count” more than 0 (true)
Step_818: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_819: Checking a variable “count” more than 0 (true)
Step_820: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_821: Checking a variable “count” more than 0 (false)
Step_822: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_823: Print variable (count)(needle1)(needle3)
Step_824: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_825: Checking a variable “count” more than 0 (false)
Step_826: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_827: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_828: Print variable (count)(needle1)(needle3)
Step_829: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_830: Checking a variable “count” more than 0 (true)
Step_831: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_832: Checking a variable “count” more than 0 (false)
Step_833: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_834: Print variable (count)(needle1)(needle3)
Step_835: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_836: Checking a variable “count” more than 0 (false)
Step_837: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_838: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_839: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_840: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_841: Print variable (count)(needle1)(needle3)
Step_842: (7) New recursive function (count = 3, needle1 = 1, needle2 = 3, needle3 = 2)
Step_843: Checking a variable “count” more than 0 (true)
Step_844: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_845: Checking a variable “count” more than 0 (true)
Step_846: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_847: Checking a variable “count” more than 0 (true)
Step_848: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_849: Checking a variable “count” more than 0 (false)
Step_850: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_851: Print variable (count)(needle1)(needle3)
Step_852: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_853: Checking a variable “count” more than 0 (false)
Step_854: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_855: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_856: Print variable (count)(needle1)(needle3)
Step_857: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_858: Checking a variable “count” more than 0 (true)
Step_859: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_860: Checking a variable “count” more than 0 (false)
Step_861: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_862: Print variable (count)(needle1)(needle3)
Step_863: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_864: Checking a variable “count” more than 0 (false)
Step_865: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_866: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_867: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_868: Print variable (count)(needle1)(needle3)
Step_869: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_870: Checking a variable “count” more than 0 (true)
Step_871: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_872: Checking a variable “count” more than 0 (true)
Step_873: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_874: Checking a variable “count” more than 0 (false)
Step_875: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_876: Print variable (count)(needle1)(needle3)
Step_877: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_878: Checking a variable “count” more than 0 (false)
Step_879: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_880: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_881: Print variable (count)(needle1)(needle3)
Step_882: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_883: Checking a variable “count” more than 0 (true)
Step_884: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_885: Checking a variable “count” more than 0 (false)
Step_886: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_887: Print variable (count)(needle1)(needle3)
Step_888: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_889: Checking a variable “count” more than 0 (false)
Step_890: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_891: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_892: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_893: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_894: (6) Collapsing recursive function (count = 4, needle1 = 2, needle2 = 1, needle3 = 3)
Step_895: (5) Collapsing recursive function (count = 5, needle1 = 1, needle2 = 2, needle3 = 3)
Step_896: (4) Collapsing recursive function (count = 6, needle1 = 2, needle2 = 1, needle3 = 3)
Step_897: (3) Collapsing recursive function (count = 7, needle1 = 1, needle2 = 2, needle3 = 3)
Step_898: Print variable (count)(needle1)(needle3)
Step_899: (3) New recursive function (count = 7, needle1 = 3, needle2 = 2, needle3 = 1)
Step_900: Checking a variable “count” more than 0 (true)
Step_901: (4) New recursive function (count = 6, needle1 = 3, needle2 = 2, needle3 = 1)
Step_902: Checking a variable “count” more than 0 (true)
Step_903: (5) New recursive function (count = 5, needle1 = 3, needle2 = 1, needle3 = 2)
Step_904: Checking a variable “count” more than 0 (true)
Step_905: (6) New recursive function (count = 4, needle1 = 3, needle2 = 2, needle3 = 1)
Step_906: Checking a variable “count” more than 0 (true)
Step_907: (7) New recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_908: Checking a variable “count” more than 0 (true)
Step_909: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_910: Checking a variable “count” more than 0 (true)
Step_911: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_912: Checking a variable “count” more than 0 (true)
Step_913: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_914: Checking a variable “count” more than 0 (false)
Step_915: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_916: Print variable (count)(needle1)(needle3)
Step_917: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_918: Checking a variable “count” more than 0 (false)
Step_919: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_920: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_921: Print variable (count)(needle1)(needle3)
Step_922: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_923: Checking a variable “count” more than 0 (true)
Step_924: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_925: Checking a variable “count” more than 0 (false)
Step_926: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_927: Print variable (count)(needle1)(needle3)
Step_928: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_929: Checking a variable “count” more than 0 (false)
Step_930: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_931: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_932: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_933: Print variable (count)(needle1)(needle3)
Step_934: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_935: Checking a variable “count” more than 0 (true)
Step_936: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_937: Checking a variable “count” more than 0 (true)
Step_938: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_939: Checking a variable “count” more than 0 (false)
Step_940: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_941: Print variable (count)(needle1)(needle3)
Step_942: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_943: Checking a variable “count” more than 0 (false)
Step_944: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_945: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_946: Print variable (count)(needle1)(needle3)
Step_947: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_948: Checking a variable “count” more than 0 (true)
Step_949: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_950: Checking a variable “count” more than 0 (false)
Step_951: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_952: Print variable (count)(needle1)(needle3)
Step_953: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_954: Checking a variable “count” more than 0 (false)
Step_955: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_956: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_957: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_958: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_959: Print variable (count)(needle1)(needle3)
Step_960: (7) New recursive function (count = 3, needle1 = 2, needle2 = 1, needle3 = 3)
Step_961: Checking a variable “count” more than 0 (true)
Step_962: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_963: Checking a variable “count” more than 0 (true)
Step_964: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_965: Checking a variable “count” more than 0 (true)
Step_966: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_967: Checking a variable “count” more than 0 (false)
Step_968: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_969: Print variable (count)(needle1)(needle3)
Step_970: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_971: Checking a variable “count” more than 0 (false)
Step_972: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_973: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_974: Print variable (count)(needle1)(needle3)
Step_975: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_976: Checking a variable “count” more than 0 (true)
Step_977: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_978: Checking a variable “count” more than 0 (false)
Step_979: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_980: Print variable (count)(needle1)(needle3)
Step_981: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_982: Checking a variable “count” more than 0 (false)
Step_983: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_984: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_985: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_986: Print variable (count)(needle1)(needle3)
Step_987: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_988: Checking a variable “count” more than 0 (true)
Step_989: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_990: Checking a variable “count” more than 0 (true)
Step_991: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_992: Checking a variable “count” more than 0 (false)
Step_993: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_994: Print variable (count)(needle1)(needle3)
Step_995: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_996: Checking a variable “count” more than 0 (false)
Step_997: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_998: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_999: Print variable (count)(needle1)(needle3)
Step_1000: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1001: Checking a variable “count” more than 0 (true)
Step_1002: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1003: Checking a variable “count” more than 0 (false)
Step_1004: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1005: Print variable (count)(needle1)(needle3)
Step_1006: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1007: Checking a variable “count” more than 0 (false)
Step_1008: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1009: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1010: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1011: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1012: (6) Collapsing recursive function (count = 4, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1013: Print variable (count)(needle1)(needle3)
Step_1014: (6) New recursive function (count = 4, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1015: Checking a variable “count” more than 0 (true)
Step_1016: (7) New recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1017: Checking a variable “count” more than 0 (true)
Step_1018: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1019: Checking a variable “count” more than 0 (true)
Step_1020: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1021: Checking a variable “count” more than 0 (true)
Step_1022: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1023: Checking a variable “count” more than 0 (false)
Step_1024: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1025: Print variable (count)(needle1)(needle3)
Step_1026: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1027: Checking a variable “count” more than 0 (false)
Step_1028: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1029: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1030: Print variable (count)(needle1)(needle3)
Step_1031: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1032: Checking a variable “count” more than 0 (true)
Step_1033: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1034: Checking a variable “count” more than 0 (false)
Step_1035: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1036: Print variable (count)(needle1)(needle3)
Step_1037: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1038: Checking a variable “count” more than 0 (false)
Step_1039: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1040: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1041: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1042: Print variable (count)(needle1)(needle3)
Step_1043: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1044: Checking a variable “count” more than 0 (true)
Step_1045: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1046: Checking a variable “count” more than 0 (true)
Step_1047: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1048: Checking a variable “count” more than 0 (false)
Step_1049: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1050: Print variable (count)(needle1)(needle3)
Step_1051: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1052: Checking a variable “count” more than 0 (false)
Step_1053: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1054: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1055: Print variable (count)(needle1)(needle3)
Step_1056: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1057: Checking a variable “count” more than 0 (true)
Step_1058: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1059: Checking a variable “count” more than 0 (false)
Step_1060: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1061: Print variable (count)(needle1)(needle3)
Step_1062: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1063: Checking a variable “count” more than 0 (false)
Step_1064: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1065: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1066: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1067: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1068: Print variable (count)(needle1)(needle3)
Step_1069: (7) New recursive function (count = 3, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1070: Checking a variable “count” more than 0 (true)
Step_1071: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1072: Checking a variable “count” more than 0 (true)
Step_1073: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1074: Checking a variable “count” more than 0 (true)
Step_1075: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1076: Checking a variable “count” more than 0 (false)
Step_1077: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1078: Print variable (count)(needle1)(needle3)
Step_1079: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1080: Checking a variable “count” more than 0 (false)
Step_1081: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1082: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1083: Print variable (count)(needle1)(needle3)
Step_1084: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1085: Checking a variable “count” more than 0 (true)
Step_1086: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1087: Checking a variable “count” more than 0 (false)
Step_1088: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1089: Print variable (count)(needle1)(needle3)
Step_1090: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1091: Checking a variable “count” more than 0 (false)
Step_1092: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1093: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1094: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1095: Print variable (count)(needle1)(needle3)
Step_1096: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1097: Checking a variable “count” more than 0 (true)
Step_1098: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1099: Checking a variable “count” more than 0 (true)
Step_1100: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1101: Checking a variable “count” more than 0 (false)
Step_1102: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1103: Print variable (count)(needle1)(needle3)
Step_1104: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1105: Checking a variable “count” more than 0 (false)
Step_1106: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1107: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1108: Print variable (count)(needle1)(needle3)
Step_1109: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1110: Checking a variable “count” more than 0 (true)
Step_1111: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1112: Checking a variable “count” more than 0 (false)
Step_1113: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1114: Print variable (count)(needle1)(needle3)
Step_1115: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1116: Checking a variable “count” more than 0 (false)
Step_1117: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1118: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1119: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1120: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1121: (6) Collapsing recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1122: (5) Collapsing recursive function (count = 5, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1123: Print variable (count)(needle1)(needle3)
Step_1124: (5) New recursive function (count = 5, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1125: Checking a variable “count” more than 0 (true)
Step_1126: (6) New recursive function (count = 4, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1127: Checking a variable “count” more than 0 (true)
Step_1128: (7) New recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1129: Checking a variable “count” more than 0 (true)
Step_1130: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1131: Checking a variable “count” more than 0 (true)
Step_1132: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1133: Checking a variable “count” more than 0 (true)
Step_1134: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1135: Checking a variable “count” more than 0 (false)
Step_1136: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1137: Print variable (count)(needle1)(needle3)
Step_1138: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1139: Checking a variable “count” more than 0 (false)
Step_1140: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1141: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1142: Print variable (count)(needle1)(needle3)
Step_1143: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1144: Checking a variable “count” more than 0 (true)
Step_1145: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1146: Checking a variable “count” more than 0 (false)
Step_1147: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1148: Print variable (count)(needle1)(needle3)
Step_1149: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1150: Checking a variable “count” more than 0 (false)
Step_1151: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1152: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1153: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1154: Print variable (count)(needle1)(needle3)
Step_1155: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1156: Checking a variable “count” more than 0 (true)
Step_1157: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1158: Checking a variable “count” more than 0 (true)
Step_1159: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1160: Checking a variable “count” more than 0 (false)
Step_1161: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1162: Print variable (count)(needle1)(needle3)
Step_1163: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1164: Checking a variable “count” more than 0 (false)
Step_1165: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1166: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1167: Print variable (count)(needle1)(needle3)
Step_1168: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1169: Checking a variable “count” more than 0 (true)
Step_1170: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1171: Checking a variable “count” more than 0 (false)
Step_1172: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1173: Print variable (count)(needle1)(needle3)
Step_1174: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1175: Checking a variable “count” more than 0 (false)
Step_1176: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1177: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1178: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1179: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1180: Print variable (count)(needle1)(needle3)
Step_1181: (7) New recursive function (count = 3, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1182: Checking a variable “count” more than 0 (true)
Step_1183: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1184: Checking a variable “count” more than 0 (true)
Step_1185: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1186: Checking a variable “count” more than 0 (true)
Step_1187: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1188: Checking a variable “count” more than 0 (false)
Step_1189: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1190: Print variable (count)(needle1)(needle3)
Step_1191: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1192: Checking a variable “count” more than 0 (false)
Step_1193: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1194: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1195: Print variable (count)(needle1)(needle3)
Step_1196: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1197: Checking a variable “count” more than 0 (true)
Step_1198: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1199: Checking a variable “count” more than 0 (false)
Step_1200: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1201: Print variable (count)(needle1)(needle3)
Step_1202: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1203: Checking a variable “count” more than 0 (false)
Step_1204: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1205: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1206: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1207: Print variable (count)(needle1)(needle3)
Step_1208: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1209: Checking a variable “count” more than 0 (true)
Step_1210: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1211: Checking a variable “count” more than 0 (true)
Step_1212: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1213: Checking a variable “count” more than 0 (false)
Step_1214: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1215: Print variable (count)(needle1)(needle3)
Step_1216: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1217: Checking a variable “count” more than 0 (false)
Step_1218: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1219: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1220: Print variable (count)(needle1)(needle3)
Step_1221: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1222: Checking a variable “count” more than 0 (true)
Step_1223: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1224: Checking a variable “count” more than 0 (false)
Step_1225: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1226: Print variable (count)(needle1)(needle3)
Step_1227: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1228: Checking a variable “count” more than 0 (false)
Step_1229: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1230: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1231: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1232: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1233: (6) Collapsing recursive function (count = 4, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1234: Print variable (count)(needle1)(needle3)
Step_1235: (6) New recursive function (count = 4, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1236: Checking a variable “count” more than 0 (true)
Step_1237: (7) New recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1238: Checking a variable “count” more than 0 (true)
Step_1239: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1240: Checking a variable “count” more than 0 (true)
Step_1241: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1242: Checking a variable “count” more than 0 (true)
Step_1243: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1244: Checking a variable “count” more than 0 (false)
Step_1245: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1246: Print variable (count)(needle1)(needle3)
Step_1247: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1248: Checking a variable “count” more than 0 (false)
Step_1249: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1250: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1251: Print variable (count)(needle1)(needle3)
Step_1252: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1253: Checking a variable “count” more than 0 (true)
Step_1254: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1255: Checking a variable “count” more than 0 (false)
Step_1256: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1257: Print variable (count)(needle1)(needle3)
Step_1258: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1259: Checking a variable “count” more than 0 (false)
Step_1260: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1261: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1262: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1263: Print variable (count)(needle1)(needle3)
Step_1264: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1265: Checking a variable “count” more than 0 (true)
Step_1266: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1267: Checking a variable “count” more than 0 (true)
Step_1268: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1269: Checking a variable “count” more than 0 (false)
Step_1270: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1271: Print variable (count)(needle1)(needle3)
Step_1272: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1273: Checking a variable “count” more than 0 (false)
Step_1274: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1275: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1276: Print variable (count)(needle1)(needle3)
Step_1277: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1278: Checking a variable “count” more than 0 (true)
Step_1279: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1280: Checking a variable “count” more than 0 (false)
Step_1281: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1282: Print variable (count)(needle1)(needle3)
Step_1283: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1284: Checking a variable “count” more than 0 (false)
Step_1285: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1286: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1287: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1288: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1289: Print variable (count)(needle1)(needle3)
Step_1290: (7) New recursive function (count = 3, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1291: Checking a variable “count” more than 0 (true)
Step_1292: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1293: Checking a variable “count” more than 0 (true)
Step_1294: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1295: Checking a variable “count” more than 0 (true)
Step_1296: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1297: Checking a variable “count” more than 0 (false)
Step_1298: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1299: Print variable (count)(needle1)(needle3)
Step_1300: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1301: Checking a variable “count” more than 0 (false)
Step_1302: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1303: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1304: Print variable (count)(needle1)(needle3)
Step_1305: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1306: Checking a variable “count” more than 0 (true)
Step_1307: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1308: Checking a variable “count” more than 0 (false)
Step_1309: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1310: Print variable (count)(needle1)(needle3)
Step_1311: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1312: Checking a variable “count” more than 0 (false)
Step_1313: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1314: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1315: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1316: Print variable (count)(needle1)(needle3)
Step_1317: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1318: Checking a variable “count” more than 0 (true)
Step_1319: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1320: Checking a variable “count” more than 0 (true)
Step_1321: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1322: Checking a variable “count” more than 0 (false)
Step_1323: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1324: Print variable (count)(needle1)(needle3)
Step_1325: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1326: Checking a variable “count” more than 0 (false)
Step_1327: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1328: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1329: Print variable (count)(needle1)(needle3)
Step_1330: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1331: Checking a variable “count” more than 0 (true)
Step_1332: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1333: Checking a variable “count” more than 0 (false)
Step_1334: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1335: Print variable (count)(needle1)(needle3)
Step_1336: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1337: Checking a variable “count” more than 0 (false)
Step_1338: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1339: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1340: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1341: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1342: (6) Collapsing recursive function (count = 4, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1343: (5) Collapsing recursive function (count = 5, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1344: (4) Collapsing recursive function (count = 6, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1345: Print variable (count)(needle1)(needle3)
Step_1346: (4) New recursive function (count = 6, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1347: Checking a variable “count” more than 0 (true)
Step_1348: (5) New recursive function (count = 5, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1349: Checking a variable “count” more than 0 (true)
Step_1350: (6) New recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1351: Checking a variable “count” more than 0 (true)
Step_1352: (7) New recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1353: Checking a variable “count” more than 0 (true)
Step_1354: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1355: Checking a variable “count” more than 0 (true)
Step_1356: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1357: Checking a variable “count” more than 0 (true)
Step_1358: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1359: Checking a variable “count” more than 0 (false)
Step_1360: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1361: Print variable (count)(needle1)(needle3)
Step_1362: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1363: Checking a variable “count” more than 0 (false)
Step_1364: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1365: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1366: Print variable (count)(needle1)(needle3)
Step_1367: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1368: Checking a variable “count” more than 0 (true)
Step_1369: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1370: Checking a variable “count” more than 0 (false)
Step_1371: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1372: Print variable (count)(needle1)(needle3)
Step_1373: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1374: Checking a variable “count” more than 0 (false)
Step_1375: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1376: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1377: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1378: Print variable (count)(needle1)(needle3)
Step_1379: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1380: Checking a variable “count” more than 0 (true)
Step_1381: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1382: Checking a variable “count” more than 0 (true)
Step_1383: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1384: Checking a variable “count” more than 0 (false)
Step_1385: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1386: Print variable (count)(needle1)(needle3)
Step_1387: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1388: Checking a variable “count” more than 0 (false)
Step_1389: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1390: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1391: Print variable (count)(needle1)(needle3)
Step_1392: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1393: Checking a variable “count” more than 0 (true)
Step_1394: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1395: Checking a variable “count” more than 0 (false)
Step_1396: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1397: Print variable (count)(needle1)(needle3)
Step_1398: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1399: Checking a variable “count” more than 0 (false)
Step_1400: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1401: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1402: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1403: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1404: Print variable (count)(needle1)(needle3)
Step_1405: (7) New recursive function (count = 3, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1406: Checking a variable “count” more than 0 (true)
Step_1407: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1408: Checking a variable “count” more than 0 (true)
Step_1409: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1410: Checking a variable “count” more than 0 (true)
Step_1411: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1412: Checking a variable “count” more than 0 (false)
Step_1413: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1414: Print variable (count)(needle1)(needle3)
Step_1415: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1416: Checking a variable “count” more than 0 (false)
Step_1417: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1418: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1419: Print variable (count)(needle1)(needle3)
Step_1420: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1421: Checking a variable “count” more than 0 (true)
Step_1422: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1423: Checking a variable “count” more than 0 (false)
Step_1424: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1425: Print variable (count)(needle1)(needle3)
Step_1426: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1427: Checking a variable “count” more than 0 (false)
Step_1428: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1429: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1430: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1431: Print variable (count)(needle1)(needle3)
Step_1432: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1433: Checking a variable “count” more than 0 (true)
Step_1434: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1435: Checking a variable “count” more than 0 (true)
Step_1436: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1437: Checking a variable “count” more than 0 (false)
Step_1438: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1439: Print variable (count)(needle1)(needle3)
Step_1440: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1441: Checking a variable “count” more than 0 (false)
Step_1442: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1443: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1444: Print variable (count)(needle1)(needle3)
Step_1445: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1446: Checking a variable “count” more than 0 (true)
Step_1447: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1448: Checking a variable “count” more than 0 (false)
Step_1449: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1450: Print variable (count)(needle1)(needle3)
Step_1451: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1452: Checking a variable “count” more than 0 (false)
Step_1453: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1454: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1455: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1456: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1457: (6) Collapsing recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1458: Print variable (count)(needle1)(needle3)
Step_1459: (6) New recursive function (count = 4, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1460: Checking a variable “count” more than 0 (true)
Step_1461: (7) New recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1462: Checking a variable “count” more than 0 (true)
Step_1463: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1464: Checking a variable “count” more than 0 (true)
Step_1465: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1466: Checking a variable “count” more than 0 (true)
Step_1467: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1468: Checking a variable “count” more than 0 (false)
Step_1469: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1470: Print variable (count)(needle1)(needle3)
Step_1471: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1472: Checking a variable “count” more than 0 (false)
Step_1473: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1474: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1475: Print variable (count)(needle1)(needle3)
Step_1476: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1477: Checking a variable “count” more than 0 (true)
Step_1478: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1479: Checking a variable “count” more than 0 (false)
Step_1480: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1481: Print variable (count)(needle1)(needle3)
Step_1482: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1483: Checking a variable “count” more than 0 (false)
Step_1484: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1485: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1486: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1487: Print variable (count)(needle1)(needle3)
Step_1488: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1489: Checking a variable “count” more than 0 (true)
Step_1490: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1491: Checking a variable “count” more than 0 (true)
Step_1492: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1493: Checking a variable “count” more than 0 (false)
Step_1494: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1495: Print variable (count)(needle1)(needle3)
Step_1496: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1497: Checking a variable “count” more than 0 (false)
Step_1498: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1499: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1500: Print variable (count)(needle1)(needle3)
Step_1501: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1502: Checking a variable “count” more than 0 (true)
Step_1503: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1504: Checking a variable “count” more than 0 (false)
Step_1505: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1506: Print variable (count)(needle1)(needle3)
Step_1507: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1508: Checking a variable “count” more than 0 (false)
Step_1509: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1510: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1511: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1512: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1513: Print variable (count)(needle1)(needle3)
Step_1514: (7) New recursive function (count = 3, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1515: Checking a variable “count” more than 0 (true)
Step_1516: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1517: Checking a variable “count” more than 0 (true)
Step_1518: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1519: Checking a variable “count” more than 0 (true)
Step_1520: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1521: Checking a variable “count” more than 0 (false)
Step_1522: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1523: Print variable (count)(needle1)(needle3)
Step_1524: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1525: Checking a variable “count” more than 0 (false)
Step_1526: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1527: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1528: Print variable (count)(needle1)(needle3)
Step_1529: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1530: Checking a variable “count” more than 0 (true)
Step_1531: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1532: Checking a variable “count” more than 0 (false)
Step_1533: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1534: Print variable (count)(needle1)(needle3)
Step_1535: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1536: Checking a variable “count” more than 0 (false)
Step_1537: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1538: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1539: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1540: Print variable (count)(needle1)(needle3)
Step_1541: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1542: Checking a variable “count” more than 0 (true)
Step_1543: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1544: Checking a variable “count” more than 0 (true)
Step_1545: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1546: Checking a variable “count” more than 0 (false)
Step_1547: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1548: Print variable (count)(needle1)(needle3)
Step_1549: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1550: Checking a variable “count” more than 0 (false)
Step_1551: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1552: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1553: Print variable (count)(needle1)(needle3)
Step_1554: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1555: Checking a variable “count” more than 0 (true)
Step_1556: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1557: Checking a variable “count” more than 0 (false)
Step_1558: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1559: Print variable (count)(needle1)(needle3)
Step_1560: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1561: Checking a variable “count” more than 0 (false)
Step_1562: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1563: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1564: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1565: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1566: (6) Collapsing recursive function (count = 4, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1567: (5) Collapsing recursive function (count = 5, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1568: Print variable (count)(needle1)(needle3)
Step_1569: (5) New recursive function (count = 5, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1570: Checking a variable “count” more than 0 (true)
Step_1571: (6) New recursive function (count = 4, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1572: Checking a variable “count” more than 0 (true)
Step_1573: (7) New recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1574: Checking a variable “count” more than 0 (true)
Step_1575: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1576: Checking a variable “count” more than 0 (true)
Step_1577: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1578: Checking a variable “count” more than 0 (true)
Step_1579: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1580: Checking a variable “count” more than 0 (false)
Step_1581: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1582: Print variable (count)(needle1)(needle3)
Step_1583: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1584: Checking a variable “count” more than 0 (false)
Step_1585: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1586: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1587: Print variable (count)(needle1)(needle3)
Step_1588: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1589: Checking a variable “count” more than 0 (true)
Step_1590: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1591: Checking a variable “count” more than 0 (false)
Step_1592: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1593: Print variable (count)(needle1)(needle3)
Step_1594: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1595: Checking a variable “count” more than 0 (false)
Step_1596: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1597: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1598: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1599: Print variable (count)(needle1)(needle3)
Step_1600: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1601: Checking a variable “count” more than 0 (true)
Step_1602: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1603: Checking a variable “count” more than 0 (true)
Step_1604: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1605: Checking a variable “count” more than 0 (false)
Step_1606: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1607: Print variable (count)(needle1)(needle3)
Step_1608: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1609: Checking a variable “count” more than 0 (false)
Step_1610: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1611: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1612: Print variable (count)(needle1)(needle3)
Step_1613: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1614: Checking a variable “count” more than 0 (true)
Step_1615: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1616: Checking a variable “count” more than 0 (false)
Step_1617: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1618: Print variable (count)(needle1)(needle3)
Step_1619: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1620: Checking a variable “count” more than 0 (false)
Step_1621: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1622: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1623: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1624: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1625: Print variable (count)(needle1)(needle3)
Step_1626: (7) New recursive function (count = 3, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1627: Checking a variable “count” more than 0 (true)
Step_1628: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1629: Checking a variable “count” more than 0 (true)
Step_1630: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1631: Checking a variable “count” more than 0 (true)
Step_1632: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1633: Checking a variable “count” more than 0 (false)
Step_1634: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1635: Print variable (count)(needle1)(needle3)
Step_1636: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1637: Checking a variable “count” more than 0 (false)
Step_1638: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1639: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1640: Print variable (count)(needle1)(needle3)
Step_1641: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1642: Checking a variable “count” more than 0 (true)
Step_1643: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1644: Checking a variable “count” more than 0 (false)
Step_1645: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1646: Print variable (count)(needle1)(needle3)
Step_1647: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1648: Checking a variable “count” more than 0 (false)
Step_1649: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1650: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1651: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1652: Print variable (count)(needle1)(needle3)
Step_1653: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1654: Checking a variable “count” more than 0 (true)
Step_1655: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1656: Checking a variable “count” more than 0 (true)
Step_1657: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1658: Checking a variable “count” more than 0 (false)
Step_1659: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1660: Print variable (count)(needle1)(needle3)
Step_1661: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1662: Checking a variable “count” more than 0 (false)
Step_1663: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1664: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1665: Print variable (count)(needle1)(needle3)
Step_1666: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1667: Checking a variable “count” more than 0 (true)
Step_1668: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1669: Checking a variable “count” more than 0 (false)
Step_1670: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1671: Print variable (count)(needle1)(needle3)
Step_1672: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1673: Checking a variable “count” more than 0 (false)
Step_1674: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1675: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1676: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1677: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1678: (6) Collapsing recursive function (count = 4, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1679: Print variable (count)(needle1)(needle3)
Step_1680: (6) New recursive function (count = 4, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1681: Checking a variable “count” more than 0 (true)
Step_1682: (7) New recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1683: Checking a variable “count” more than 0 (true)
Step_1684: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1685: Checking a variable “count” more than 0 (true)
Step_1686: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1687: Checking a variable “count” more than 0 (true)
Step_1688: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1689: Checking a variable “count” more than 0 (false)
Step_1690: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1691: Print variable (count)(needle1)(needle3)
Step_1692: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1693: Checking a variable “count” more than 0 (false)
Step_1694: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1695: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1696: Print variable (count)(needle1)(needle3)
Step_1697: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1698: Checking a variable “count” more than 0 (true)
Step_1699: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1700: Checking a variable “count” more than 0 (false)
Step_1701: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1702: Print variable (count)(needle1)(needle3)
Step_1703: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1704: Checking a variable “count” more than 0 (false)
Step_1705: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1706: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1707: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1708: Print variable (count)(needle1)(needle3)
Step_1709: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1710: Checking a variable “count” more than 0 (true)
Step_1711: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1712: Checking a variable “count” more than 0 (true)
Step_1713: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1714: Checking a variable “count” more than 0 (false)
Step_1715: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1716: Print variable (count)(needle1)(needle3)
Step_1717: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1718: Checking a variable “count” more than 0 (false)
Step_1719: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1720: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1721: Print variable (count)(needle1)(needle3)
Step_1722: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1723: Checking a variable “count” more than 0 (true)
Step_1724: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1725: Checking a variable “count” more than 0 (false)
Step_1726: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1727: Print variable (count)(needle1)(needle3)
Step_1728: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1729: Checking a variable “count” more than 0 (false)
Step_1730: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1731: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1732: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1733: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1734: Print variable (count)(needle1)(needle3)
Step_1735: (7) New recursive function (count = 3, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1736: Checking a variable “count” more than 0 (true)
Step_1737: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1738: Checking a variable “count” more than 0 (true)
Step_1739: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1740: Checking a variable “count” more than 0 (true)
Step_1741: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1742: Checking a variable “count” more than 0 (false)
Step_1743: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1744: Print variable (count)(needle1)(needle3)
Step_1745: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1746: Checking a variable “count” more than 0 (false)
Step_1747: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1748: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1749: Print variable (count)(needle1)(needle3)
Step_1750: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1751: Checking a variable “count” more than 0 (true)
Step_1752: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1753: Checking a variable “count” more than 0 (false)
Step_1754: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1755: Print variable (count)(needle1)(needle3)
Step_1756: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1757: Checking a variable “count” more than 0 (false)
Step_1758: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1759: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1760: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1761: Print variable (count)(needle1)(needle3)
Step_1762: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1763: Checking a variable “count” more than 0 (true)
Step_1764: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1765: Checking a variable “count” more than 0 (true)
Step_1766: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1767: Checking a variable “count” more than 0 (false)
Step_1768: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1769: Print variable (count)(needle1)(needle3)
Step_1770: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1771: Checking a variable “count” more than 0 (false)
Step_1772: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1773: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1774: Print variable (count)(needle1)(needle3)
Step_1775: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1776: Checking a variable “count” more than 0 (true)
Step_1777: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1778: Checking a variable “count” more than 0 (false)
Step_1779: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1780: Print variable (count)(needle1)(needle3)
Step_1781: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1782: Checking a variable “count” more than 0 (false)
Step_1783: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1784: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1785: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1786: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1787: (6) Collapsing recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1788: (5) Collapsing recursive function (count = 5, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1789: (4) Collapsing recursive function (count = 6, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1790: (3) Collapsing recursive function (count = 7, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1791: (2) Collapsing recursive function (count = 8, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1792: Print variable (count)(needle1)(needle3)
Step_1793: (2) New recursive function (count = 8, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1794: Checking a variable “count” more than 0 (true)
Step_1795: (3) New recursive function (count = 7, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1796: Checking a variable “count” more than 0 (true)
Step_1797: (4) New recursive function (count = 6, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1798: Checking a variable “count” more than 0 (true)
Step_1799: (5) New recursive function (count = 5, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1800: Checking a variable “count” more than 0 (true)
Step_1801: (6) New recursive function (count = 4, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1802: Checking a variable “count” more than 0 (true)
Step_1803: (7) New recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1804: Checking a variable “count” more than 0 (true)
Step_1805: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1806: Checking a variable “count” more than 0 (true)
Step_1807: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1808: Checking a variable “count” more than 0 (true)
Step_1809: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1810: Checking a variable “count” more than 0 (false)
Step_1811: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1812: Print variable (count)(needle1)(needle3)
Step_1813: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1814: Checking a variable “count” more than 0 (false)
Step_1815: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1816: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1817: Print variable (count)(needle1)(needle3)
Step_1818: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1819: Checking a variable “count” more than 0 (true)
Step_1820: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1821: Checking a variable “count” more than 0 (false)
Step_1822: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1823: Print variable (count)(needle1)(needle3)
Step_1824: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1825: Checking a variable “count” more than 0 (false)
Step_1826: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1827: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1828: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1829: Print variable (count)(needle1)(needle3)
Step_1830: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1831: Checking a variable “count” more than 0 (true)
Step_1832: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1833: Checking a variable “count” more than 0 (true)
Step_1834: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1835: Checking a variable “count” more than 0 (false)
Step_1836: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1837: Print variable (count)(needle1)(needle3)
Step_1838: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1839: Checking a variable “count” more than 0 (false)
Step_1840: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1841: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1842: Print variable (count)(needle1)(needle3)
Step_1843: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1844: Checking a variable “count” more than 0 (true)
Step_1845: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1846: Checking a variable “count” more than 0 (false)
Step_1847: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1848: Print variable (count)(needle1)(needle3)
Step_1849: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1850: Checking a variable “count” more than 0 (false)
Step_1851: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1852: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1853: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1854: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1855: Print variable (count)(needle1)(needle3)
Step_1856: (7) New recursive function (count = 3, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1857: Checking a variable “count” more than 0 (true)
Step_1858: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1859: Checking a variable “count” more than 0 (true)
Step_1860: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1861: Checking a variable “count” more than 0 (true)
Step_1862: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1863: Checking a variable “count” more than 0 (false)
Step_1864: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1865: Print variable (count)(needle1)(needle3)
Step_1866: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1867: Checking a variable “count” more than 0 (false)
Step_1868: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1869: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1870: Print variable (count)(needle1)(needle3)
Step_1871: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1872: Checking a variable “count” more than 0 (true)
Step_1873: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1874: Checking a variable “count” more than 0 (false)
Step_1875: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1876: Print variable (count)(needle1)(needle3)
Step_1877: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1878: Checking a variable “count” more than 0 (false)
Step_1879: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1880: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1881: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1882: Print variable (count)(needle1)(needle3)
Step_1883: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1884: Checking a variable “count” more than 0 (true)
Step_1885: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1886: Checking a variable “count” more than 0 (true)
Step_1887: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1888: Checking a variable “count” more than 0 (false)
Step_1889: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1890: Print variable (count)(needle1)(needle3)
Step_1891: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1892: Checking a variable “count” more than 0 (false)
Step_1893: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1894: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1895: Print variable (count)(needle1)(needle3)
Step_1896: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1897: Checking a variable “count” more than 0 (true)
Step_1898: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1899: Checking a variable “count” more than 0 (false)
Step_1900: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1901: Print variable (count)(needle1)(needle3)
Step_1902: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1903: Checking a variable “count” more than 0 (false)
Step_1904: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1905: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1906: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1907: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1908: (6) Collapsing recursive function (count = 4, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1909: Print variable (count)(needle1)(needle3)
Step_1910: (6) New recursive function (count = 4, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1911: Checking a variable “count” more than 0 (true)
Step_1912: (7) New recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1913: Checking a variable “count” more than 0 (true)
Step_1914: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1915: Checking a variable “count” more than 0 (true)
Step_1916: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1917: Checking a variable “count” more than 0 (true)
Step_1918: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1919: Checking a variable “count” more than 0 (false)
Step_1920: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1921: Print variable (count)(needle1)(needle3)
Step_1922: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1923: Checking a variable “count” more than 0 (false)
Step_1924: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1925: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1926: Print variable (count)(needle1)(needle3)
Step_1927: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1928: Checking a variable “count” more than 0 (true)
Step_1929: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1930: Checking a variable “count” more than 0 (false)
Step_1931: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1932: Print variable (count)(needle1)(needle3)
Step_1933: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1934: Checking a variable “count” more than 0 (false)
Step_1935: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1936: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1937: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1938: Print variable (count)(needle1)(needle3)
Step_1939: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1940: Checking a variable “count” more than 0 (true)
Step_1941: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1942: Checking a variable “count” more than 0 (true)
Step_1943: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1944: Checking a variable “count” more than 0 (false)
Step_1945: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1946: Print variable (count)(needle1)(needle3)
Step_1947: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1948: Checking a variable “count” more than 0 (false)
Step_1949: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1950: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1951: Print variable (count)(needle1)(needle3)
Step_1952: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1953: Checking a variable “count” more than 0 (true)
Step_1954: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1955: Checking a variable “count” more than 0 (false)
Step_1956: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1957: Print variable (count)(needle1)(needle3)
Step_1958: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1959: Checking a variable “count” more than 0 (false)
Step_1960: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1961: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1962: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1963: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1964: Print variable (count)(needle1)(needle3)
Step_1965: (7) New recursive function (count = 3, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1966: Checking a variable “count” more than 0 (true)
Step_1967: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1968: Checking a variable “count” more than 0 (true)
Step_1969: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1970: Checking a variable “count” more than 0 (true)
Step_1971: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1972: Checking a variable “count” more than 0 (false)
Step_1973: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1974: Print variable (count)(needle1)(needle3)
Step_1975: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1976: Checking a variable “count” more than 0 (false)
Step_1977: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1978: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1979: Print variable (count)(needle1)(needle3)
Step_1980: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1981: Checking a variable “count” more than 0 (true)
Step_1982: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1983: Checking a variable “count” more than 0 (false)
Step_1984: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_1985: Print variable (count)(needle1)(needle3)
Step_1986: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_1987: Checking a variable “count” more than 0 (false)
Step_1988: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1989: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_1990: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_1991: Print variable (count)(needle1)(needle3)
Step_1992: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1993: Checking a variable “count” more than 0 (true)
Step_1994: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_1995: Checking a variable “count” more than 0 (true)
Step_1996: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1997: Checking a variable “count” more than 0 (false)
Step_1998: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_1999: Print variable (count)(needle1)(needle3)
Step_2000: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2001: Checking a variable “count” more than 0 (false)
Step_2002: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2003: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2004: Print variable (count)(needle1)(needle3)
Step_2005: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2006: Checking a variable “count” more than 0 (true)
Step_2007: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2008: Checking a variable “count” more than 0 (false)
Step_2009: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2010: Print variable (count)(needle1)(needle3)
Step_2011: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2012: Checking a variable “count” more than 0 (false)
Step_2013: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2014: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2015: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2016: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2017: (6) Collapsing recursive function (count = 4, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2018: (5) Collapsing recursive function (count = 5, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2019: Print variable (count)(needle1)(needle3)
Step_2020: (5) New recursive function (count = 5, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2021: Checking a variable “count” more than 0 (true)
Step_2022: (6) New recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2023: Checking a variable “count” more than 0 (true)
Step_2024: (7) New recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2025: Checking a variable “count” more than 0 (true)
Step_2026: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2027: Checking a variable “count” more than 0 (true)
Step_2028: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2029: Checking a variable “count” more than 0 (true)
Step_2030: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2031: Checking a variable “count” more than 0 (false)
Step_2032: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2033: Print variable (count)(needle1)(needle3)
Step_2034: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2035: Checking a variable “count” more than 0 (false)
Step_2036: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2037: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2038: Print variable (count)(needle1)(needle3)
Step_2039: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2040: Checking a variable “count” more than 0 (true)
Step_2041: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2042: Checking a variable “count” more than 0 (false)
Step_2043: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2044: Print variable (count)(needle1)(needle3)
Step_2045: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2046: Checking a variable “count” more than 0 (false)
Step_2047: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2048: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2049: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2050: Print variable (count)(needle1)(needle3)
Step_2051: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2052: Checking a variable “count” more than 0 (true)
Step_2053: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2054: Checking a variable “count” more than 0 (true)
Step_2055: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2056: Checking a variable “count” more than 0 (false)
Step_2057: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2058: Print variable (count)(needle1)(needle3)
Step_2059: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2060: Checking a variable “count” more than 0 (false)
Step_2061: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2062: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2063: Print variable (count)(needle1)(needle3)
Step_2064: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2065: Checking a variable “count” more than 0 (true)
Step_2066: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2067: Checking a variable “count” more than 0 (false)
Step_2068: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2069: Print variable (count)(needle1)(needle3)
Step_2070: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2071: Checking a variable “count” more than 0 (false)
Step_2072: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2073: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2074: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2075: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2076: Print variable (count)(needle1)(needle3)
Step_2077: (7) New recursive function (count = 3, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2078: Checking a variable “count” more than 0 (true)
Step_2079: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2080: Checking a variable “count” more than 0 (true)
Step_2081: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2082: Checking a variable “count” more than 0 (true)
Step_2083: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2084: Checking a variable “count” more than 0 (false)
Step_2085: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2086: Print variable (count)(needle1)(needle3)
Step_2087: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2088: Checking a variable “count” more than 0 (false)
Step_2089: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2090: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2091: Print variable (count)(needle1)(needle3)
Step_2092: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2093: Checking a variable “count” more than 0 (true)
Step_2094: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2095: Checking a variable “count” more than 0 (false)
Step_2096: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2097: Print variable (count)(needle1)(needle3)
Step_2098: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2099: Checking a variable “count” more than 0 (false)
Step_2100: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2101: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2102: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2103: Print variable (count)(needle1)(needle3)
Step_2104: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2105: Checking a variable “count” more than 0 (true)
Step_2106: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2107: Checking a variable “count” more than 0 (true)
Step_2108: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2109: Checking a variable “count” more than 0 (false)
Step_2110: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2111: Print variable (count)(needle1)(needle3)
Step_2112: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2113: Checking a variable “count” more than 0 (false)
Step_2114: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2115: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2116: Print variable (count)(needle1)(needle3)
Step_2117: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2118: Checking a variable “count” more than 0 (true)
Step_2119: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2120: Checking a variable “count” more than 0 (false)
Step_2121: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2122: Print variable (count)(needle1)(needle3)
Step_2123: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2124: Checking a variable “count” more than 0 (false)
Step_2125: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2126: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2127: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2128: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2129: (6) Collapsing recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2130: Print variable (count)(needle1)(needle3)
Step_2131: (6) New recursive function (count = 4, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2132: Checking a variable “count” more than 0 (true)
Step_2133: (7) New recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2134: Checking a variable “count” more than 0 (true)
Step_2135: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2136: Checking a variable “count” more than 0 (true)
Step_2137: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2138: Checking a variable “count” more than 0 (true)
Step_2139: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2140: Checking a variable “count” more than 0 (false)
Step_2141: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2142: Print variable (count)(needle1)(needle3)
Step_2143: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2144: Checking a variable “count” more than 0 (false)
Step_2145: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2146: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2147: Print variable (count)(needle1)(needle3)
Step_2148: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2149: Checking a variable “count” more than 0 (true)
Step_2150: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2151: Checking a variable “count” more than 0 (false)
Step_2152: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2153: Print variable (count)(needle1)(needle3)
Step_2154: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2155: Checking a variable “count” more than 0 (false)
Step_2156: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2157: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2158: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2159: Print variable (count)(needle1)(needle3)
Step_2160: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2161: Checking a variable “count” more than 0 (true)
Step_2162: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2163: Checking a variable “count” more than 0 (true)
Step_2164: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2165: Checking a variable “count” more than 0 (false)
Step_2166: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2167: Print variable (count)(needle1)(needle3)
Step_2168: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2169: Checking a variable “count” more than 0 (false)
Step_2170: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2171: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2172: Print variable (count)(needle1)(needle3)
Step_2173: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2174: Checking a variable “count” more than 0 (true)
Step_2175: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2176: Checking a variable “count” more than 0 (false)
Step_2177: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2178: Print variable (count)(needle1)(needle3)
Step_2179: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2180: Checking a variable “count” more than 0 (false)
Step_2181: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2182: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2183: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2184: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2185: Print variable (count)(needle1)(needle3)
Step_2186: (7) New recursive function (count = 3, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2187: Checking a variable “count” more than 0 (true)
Step_2188: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2189: Checking a variable “count” more than 0 (true)
Step_2190: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2191: Checking a variable “count” more than 0 (true)
Step_2192: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2193: Checking a variable “count” more than 0 (false)
Step_2194: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2195: Print variable (count)(needle1)(needle3)
Step_2196: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2197: Checking a variable “count” more than 0 (false)
Step_2198: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2199: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2200: Print variable (count)(needle1)(needle3)
Step_2201: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2202: Checking a variable “count” more than 0 (true)
Step_2203: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2204: Checking a variable “count” more than 0 (false)
Step_2205: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2206: Print variable (count)(needle1)(needle3)
Step_2207: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2208: Checking a variable “count” more than 0 (false)
Step_2209: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2210: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2211: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2212: Print variable (count)(needle1)(needle3)
Step_2213: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2214: Checking a variable “count” more than 0 (true)
Step_2215: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2216: Checking a variable “count” more than 0 (true)
Step_2217: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2218: Checking a variable “count” more than 0 (false)
Step_2219: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2220: Print variable (count)(needle1)(needle3)
Step_2221: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2222: Checking a variable “count” more than 0 (false)
Step_2223: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2224: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2225: Print variable (count)(needle1)(needle3)
Step_2226: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2227: Checking a variable “count” more than 0 (true)
Step_2228: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2229: Checking a variable “count” more than 0 (false)
Step_2230: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2231: Print variable (count)(needle1)(needle3)
Step_2232: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2233: Checking a variable “count” more than 0 (false)
Step_2234: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2235: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2236: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2237: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2238: (6) Collapsing recursive function (count = 4, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2239: (5) Collapsing recursive function (count = 5, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2240: (4) Collapsing recursive function (count = 6, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2241: Print variable (count)(needle1)(needle3)
Step_2242: (4) New recursive function (count = 6, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2243: Checking a variable “count” more than 0 (true)
Step_2244: (5) New recursive function (count = 5, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2245: Checking a variable “count” more than 0 (true)
Step_2246: (6) New recursive function (count = 4, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2247: Checking a variable “count” more than 0 (true)
Step_2248: (7) New recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2249: Checking a variable “count” more than 0 (true)
Step_2250: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2251: Checking a variable “count” more than 0 (true)
Step_2252: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2253: Checking a variable “count” more than 0 (true)
Step_2254: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2255: Checking a variable “count” more than 0 (false)
Step_2256: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2257: Print variable (count)(needle1)(needle3)
Step_2258: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2259: Checking a variable “count” more than 0 (false)
Step_2260: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2261: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2262: Print variable (count)(needle1)(needle3)
Step_2263: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2264: Checking a variable “count” more than 0 (true)
Step_2265: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2266: Checking a variable “count” more than 0 (false)
Step_2267: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2268: Print variable (count)(needle1)(needle3)
Step_2269: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2270: Checking a variable “count” more than 0 (false)
Step_2271: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2272: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2273: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2274: Print variable (count)(needle1)(needle3)
Step_2275: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2276: Checking a variable “count” more than 0 (true)
Step_2277: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2278: Checking a variable “count” more than 0 (true)
Step_2279: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2280: Checking a variable “count” more than 0 (false)
Step_2281: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2282: Print variable (count)(needle1)(needle3)
Step_2283: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2284: Checking a variable “count” more than 0 (false)
Step_2285: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2286: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2287: Print variable (count)(needle1)(needle3)
Step_2288: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2289: Checking a variable “count” more than 0 (true)
Step_2290: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2291: Checking a variable “count” more than 0 (false)
Step_2292: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2293: Print variable (count)(needle1)(needle3)
Step_2294: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2295: Checking a variable “count” more than 0 (false)
Step_2296: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2297: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2298: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2299: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2300: Print variable (count)(needle1)(needle3)
Step_2301: (7) New recursive function (count = 3, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2302: Checking a variable “count” more than 0 (true)
Step_2303: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2304: Checking a variable “count” more than 0 (true)
Step_2305: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2306: Checking a variable “count” more than 0 (true)
Step_2307: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2308: Checking a variable “count” more than 0 (false)
Step_2309: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2310: Print variable (count)(needle1)(needle3)
Step_2311: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2312: Checking a variable “count” more than 0 (false)
Step_2313: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2314: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2315: Print variable (count)(needle1)(needle3)
Step_2316: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2317: Checking a variable “count” more than 0 (true)
Step_2318: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2319: Checking a variable “count” more than 0 (false)
Step_2320: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2321: Print variable (count)(needle1)(needle3)
Step_2322: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2323: Checking a variable “count” more than 0 (false)
Step_2324: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2325: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2326: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2327: Print variable (count)(needle1)(needle3)
Step_2328: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2329: Checking a variable “count” more than 0 (true)
Step_2330: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2331: Checking a variable “count” more than 0 (true)
Step_2332: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2333: Checking a variable “count” more than 0 (false)
Step_2334: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2335: Print variable (count)(needle1)(needle3)
Step_2336: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2337: Checking a variable “count” more than 0 (false)
Step_2338: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2339: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2340: Print variable (count)(needle1)(needle3)
Step_2341: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2342: Checking a variable “count” more than 0 (true)
Step_2343: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2344: Checking a variable “count” more than 0 (false)
Step_2345: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2346: Print variable (count)(needle1)(needle3)
Step_2347: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2348: Checking a variable “count” more than 0 (false)
Step_2349: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2350: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2351: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2352: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2353: (6) Collapsing recursive function (count = 4, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2354: Print variable (count)(needle1)(needle3)
Step_2355: (6) New recursive function (count = 4, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2356: Checking a variable “count” more than 0 (true)
Step_2357: (7) New recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2358: Checking a variable “count” more than 0 (true)
Step_2359: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2360: Checking a variable “count” more than 0 (true)
Step_2361: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2362: Checking a variable “count” more than 0 (true)
Step_2363: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2364: Checking a variable “count” more than 0 (false)
Step_2365: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2366: Print variable (count)(needle1)(needle3)
Step_2367: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2368: Checking a variable “count” more than 0 (false)
Step_2369: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2370: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2371: Print variable (count)(needle1)(needle3)
Step_2372: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2373: Checking a variable “count” more than 0 (true)
Step_2374: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2375: Checking a variable “count” more than 0 (false)
Step_2376: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2377: Print variable (count)(needle1)(needle3)
Step_2378: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2379: Checking a variable “count” more than 0 (false)
Step_2380: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2381: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2382: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2383: Print variable (count)(needle1)(needle3)
Step_2384: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2385: Checking a variable “count” more than 0 (true)
Step_2386: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2387: Checking a variable “count” more than 0 (true)
Step_2388: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2389: Checking a variable “count” more than 0 (false)
Step_2390: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2391: Print variable (count)(needle1)(needle3)
Step_2392: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2393: Checking a variable “count” more than 0 (false)
Step_2394: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2395: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2396: Print variable (count)(needle1)(needle3)
Step_2397: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2398: Checking a variable “count” more than 0 (true)
Step_2399: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2400: Checking a variable “count” more than 0 (false)
Step_2401: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2402: Print variable (count)(needle1)(needle3)
Step_2403: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2404: Checking a variable “count” more than 0 (false)
Step_2405: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2406: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2407: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2408: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2409: Print variable (count)(needle1)(needle3)
Step_2410: (7) New recursive function (count = 3, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2411: Checking a variable “count” more than 0 (true)
Step_2412: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2413: Checking a variable “count” more than 0 (true)
Step_2414: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2415: Checking a variable “count” more than 0 (true)
Step_2416: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2417: Checking a variable “count” more than 0 (false)
Step_2418: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2419: Print variable (count)(needle1)(needle3)
Step_2420: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2421: Checking a variable “count” more than 0 (false)
Step_2422: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2423: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2424: Print variable (count)(needle1)(needle3)
Step_2425: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2426: Checking a variable “count” more than 0 (true)
Step_2427: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2428: Checking a variable “count” more than 0 (false)
Step_2429: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2430: Print variable (count)(needle1)(needle3)
Step_2431: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2432: Checking a variable “count” more than 0 (false)
Step_2433: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2434: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2435: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2436: Print variable (count)(needle1)(needle3)
Step_2437: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2438: Checking a variable “count” more than 0 (true)
Step_2439: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2440: Checking a variable “count” more than 0 (true)
Step_2441: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2442: Checking a variable “count” more than 0 (false)
Step_2443: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2444: Print variable (count)(needle1)(needle3)
Step_2445: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2446: Checking a variable “count” more than 0 (false)
Step_2447: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2448: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2449: Print variable (count)(needle1)(needle3)
Step_2450: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2451: Checking a variable “count” more than 0 (true)
Step_2452: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2453: Checking a variable “count” more than 0 (false)
Step_2454: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2455: Print variable (count)(needle1)(needle3)
Step_2456: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2457: Checking a variable “count” more than 0 (false)
Step_2458: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2459: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2460: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2461: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2462: (6) Collapsing recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2463: (5) Collapsing recursive function (count = 5, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2464: Print variable (count)(needle1)(needle3)
Step_2465: (5) New recursive function (count = 5, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2466: Checking a variable “count” more than 0 (true)
Step_2467: (6) New recursive function (count = 4, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2468: Checking a variable “count” more than 0 (true)
Step_2469: (7) New recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2470: Checking a variable “count” more than 0 (true)
Step_2471: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2472: Checking a variable “count” more than 0 (true)
Step_2473: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2474: Checking a variable “count” more than 0 (true)
Step_2475: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2476: Checking a variable “count” more than 0 (false)
Step_2477: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2478: Print variable (count)(needle1)(needle3)
Step_2479: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2480: Checking a variable “count” more than 0 (false)
Step_2481: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2482: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2483: Print variable (count)(needle1)(needle3)
Step_2484: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2485: Checking a variable “count” more than 0 (true)
Step_2486: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2487: Checking a variable “count” more than 0 (false)
Step_2488: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2489: Print variable (count)(needle1)(needle3)
Step_2490: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2491: Checking a variable “count” more than 0 (false)
Step_2492: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2493: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2494: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2495: Print variable (count)(needle1)(needle3)
Step_2496: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2497: Checking a variable “count” more than 0 (true)
Step_2498: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2499: Checking a variable “count” more than 0 (true)
Step_2500: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2501: Checking a variable “count” more than 0 (false)
Step_2502: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2503: Print variable (count)(needle1)(needle3)
Step_2504: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2505: Checking a variable “count” more than 0 (false)
Step_2506: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2507: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2508: Print variable (count)(needle1)(needle3)
Step_2509: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2510: Checking a variable “count” more than 0 (true)
Step_2511: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2512: Checking a variable “count” more than 0 (false)
Step_2513: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2514: Print variable (count)(needle1)(needle3)
Step_2515: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2516: Checking a variable “count” more than 0 (false)
Step_2517: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2518: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2519: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2520: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2521: Print variable (count)(needle1)(needle3)
Step_2522: (7) New recursive function (count = 3, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2523: Checking a variable “count” more than 0 (true)
Step_2524: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2525: Checking a variable “count” more than 0 (true)
Step_2526: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2527: Checking a variable “count” more than 0 (true)
Step_2528: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2529: Checking a variable “count” more than 0 (false)
Step_2530: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2531: Print variable (count)(needle1)(needle3)
Step_2532: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2533: Checking a variable “count” more than 0 (false)
Step_2534: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2535: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2536: Print variable (count)(needle1)(needle3)
Step_2537: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2538: Checking a variable “count” more than 0 (true)
Step_2539: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2540: Checking a variable “count” more than 0 (false)
Step_2541: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2542: Print variable (count)(needle1)(needle3)
Step_2543: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2544: Checking a variable “count” more than 0 (false)
Step_2545: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2546: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2547: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2548: Print variable (count)(needle1)(needle3)
Step_2549: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2550: Checking a variable “count” more than 0 (true)
Step_2551: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2552: Checking a variable “count” more than 0 (true)
Step_2553: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2554: Checking a variable “count” more than 0 (false)
Step_2555: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2556: Print variable (count)(needle1)(needle3)
Step_2557: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2558: Checking a variable “count” more than 0 (false)
Step_2559: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2560: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2561: Print variable (count)(needle1)(needle3)
Step_2562: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2563: Checking a variable “count” more than 0 (true)
Step_2564: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2565: Checking a variable “count” more than 0 (false)
Step_2566: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2567: Print variable (count)(needle1)(needle3)
Step_2568: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2569: Checking a variable “count” more than 0 (false)
Step_2570: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2571: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2572: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2573: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2574: (6) Collapsing recursive function (count = 4, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2575: Print variable (count)(needle1)(needle3)
Step_2576: (6) New recursive function (count = 4, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2577: Checking a variable “count” more than 0 (true)
Step_2578: (7) New recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2579: Checking a variable “count” more than 0 (true)
Step_2580: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2581: Checking a variable “count” more than 0 (true)
Step_2582: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2583: Checking a variable “count” more than 0 (true)
Step_2584: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2585: Checking a variable “count” more than 0 (false)
Step_2586: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2587: Print variable (count)(needle1)(needle3)
Step_2588: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2589: Checking a variable “count” more than 0 (false)
Step_2590: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2591: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2592: Print variable (count)(needle1)(needle3)
Step_2593: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2594: Checking a variable “count” more than 0 (true)
Step_2595: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2596: Checking a variable “count” more than 0 (false)
Step_2597: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2598: Print variable (count)(needle1)(needle3)
Step_2599: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2600: Checking a variable “count” more than 0 (false)
Step_2601: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2602: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2603: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2604: Print variable (count)(needle1)(needle3)
Step_2605: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2606: Checking a variable “count” more than 0 (true)
Step_2607: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2608: Checking a variable “count” more than 0 (true)
Step_2609: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2610: Checking a variable “count” more than 0 (false)
Step_2611: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2612: Print variable (count)(needle1)(needle3)
Step_2613: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2614: Checking a variable “count” more than 0 (false)
Step_2615: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2616: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2617: Print variable (count)(needle1)(needle3)
Step_2618: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2619: Checking a variable “count” more than 0 (true)
Step_2620: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2621: Checking a variable “count” more than 0 (false)
Step_2622: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2623: Print variable (count)(needle1)(needle3)
Step_2624: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2625: Checking a variable “count” more than 0 (false)
Step_2626: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2627: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2628: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2629: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2630: Print variable (count)(needle1)(needle3)
Step_2631: (7) New recursive function (count = 3, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2632: Checking a variable “count” more than 0 (true)
Step_2633: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2634: Checking a variable “count” more than 0 (true)
Step_2635: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2636: Checking a variable “count” more than 0 (true)
Step_2637: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2638: Checking a variable “count” more than 0 (false)
Step_2639: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2640: Print variable (count)(needle1)(needle3)
Step_2641: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2642: Checking a variable “count” more than 0 (false)
Step_2643: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2644: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2645: Print variable (count)(needle1)(needle3)
Step_2646: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2647: Checking a variable “count” more than 0 (true)
Step_2648: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2649: Checking a variable “count” more than 0 (false)
Step_2650: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2651: Print variable (count)(needle1)(needle3)
Step_2652: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2653: Checking a variable “count” more than 0 (false)
Step_2654: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2655: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2656: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2657: Print variable (count)(needle1)(needle3)
Step_2658: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2659: Checking a variable “count” more than 0 (true)
Step_2660: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2661: Checking a variable “count” more than 0 (true)
Step_2662: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2663: Checking a variable “count” more than 0 (false)
Step_2664: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2665: Print variable (count)(needle1)(needle3)
Step_2666: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2667: Checking a variable “count” more than 0 (false)
Step_2668: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2669: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2670: Print variable (count)(needle1)(needle3)
Step_2671: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2672: Checking a variable “count” more than 0 (true)
Step_2673: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2674: Checking a variable “count” more than 0 (false)
Step_2675: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2676: Print variable (count)(needle1)(needle3)
Step_2677: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2678: Checking a variable “count” more than 0 (false)
Step_2679: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2680: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2681: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2682: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2683: (6) Collapsing recursive function (count = 4, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2684: (5) Collapsing recursive function (count = 5, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2685: (4) Collapsing recursive function (count = 6, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2686: (3) Collapsing recursive function (count = 7, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2687: Print variable (count)(needle1)(needle3)
Step_2688: (3) New recursive function (count = 7, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2689: Checking a variable “count” more than 0 (true)
Step_2690: (4) New recursive function (count = 6, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2691: Checking a variable “count” more than 0 (true)
Step_2692: (5) New recursive function (count = 5, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2693: Checking a variable “count” more than 0 (true)
Step_2694: (6) New recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2695: Checking a variable “count” more than 0 (true)
Step_2696: (7) New recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2697: Checking a variable “count” more than 0 (true)
Step_2698: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2699: Checking a variable “count” more than 0 (true)
Step_2700: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2701: Checking a variable “count” more than 0 (true)
Step_2702: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2703: Checking a variable “count” more than 0 (false)
Step_2704: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2705: Print variable (count)(needle1)(needle3)
Step_2706: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2707: Checking a variable “count” more than 0 (false)
Step_2708: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2709: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2710: Print variable (count)(needle1)(needle3)
Step_2711: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2712: Checking a variable “count” more than 0 (true)
Step_2713: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2714: Checking a variable “count” more than 0 (false)
Step_2715: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2716: Print variable (count)(needle1)(needle3)
Step_2717: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2718: Checking a variable “count” more than 0 (false)
Step_2719: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2720: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2721: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2722: Print variable (count)(needle1)(needle3)
Step_2723: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2724: Checking a variable “count” more than 0 (true)
Step_2725: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2726: Checking a variable “count” more than 0 (true)
Step_2727: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2728: Checking a variable “count” more than 0 (false)
Step_2729: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2730: Print variable (count)(needle1)(needle3)
Step_2731: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2732: Checking a variable “count” more than 0 (false)
Step_2733: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2734: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2735: Print variable (count)(needle1)(needle3)
Step_2736: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2737: Checking a variable “count” more than 0 (true)
Step_2738: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2739: Checking a variable “count” more than 0 (false)
Step_2740: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2741: Print variable (count)(needle1)(needle3)
Step_2742: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2743: Checking a variable “count” more than 0 (false)
Step_2744: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2745: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2746: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2747: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2748: Print variable (count)(needle1)(needle3)
Step_2749: (7) New recursive function (count = 3, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2750: Checking a variable “count” more than 0 (true)
Step_2751: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2752: Checking a variable “count” more than 0 (true)
Step_2753: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2754: Checking a variable “count” more than 0 (true)
Step_2755: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2756: Checking a variable “count” more than 0 (false)
Step_2757: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2758: Print variable (count)(needle1)(needle3)
Step_2759: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2760: Checking a variable “count” more than 0 (false)
Step_2761: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2762: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2763: Print variable (count)(needle1)(needle3)
Step_2764: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2765: Checking a variable “count” more than 0 (true)
Step_2766: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2767: Checking a variable “count” more than 0 (false)
Step_2768: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2769: Print variable (count)(needle1)(needle3)
Step_2770: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2771: Checking a variable “count” more than 0 (false)
Step_2772: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2773: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2774: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2775: Print variable (count)(needle1)(needle3)
Step_2776: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2777: Checking a variable “count” more than 0 (true)
Step_2778: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2779: Checking a variable “count” more than 0 (true)
Step_2780: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2781: Checking a variable “count” more than 0 (false)
Step_2782: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2783: Print variable (count)(needle1)(needle3)
Step_2784: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2785: Checking a variable “count” more than 0 (false)
Step_2786: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2787: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2788: Print variable (count)(needle1)(needle3)
Step_2789: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2790: Checking a variable “count” more than 0 (true)
Step_2791: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2792: Checking a variable “count” more than 0 (false)
Step_2793: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2794: Print variable (count)(needle1)(needle3)
Step_2795: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2796: Checking a variable “count” more than 0 (false)
Step_2797: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2798: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2799: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2800: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2801: (6) Collapsing recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2802: Print variable (count)(needle1)(needle3)
Step_2803: (6) New recursive function (count = 4, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2804: Checking a variable “count” more than 0 (true)
Step_2805: (7) New recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2806: Checking a variable “count” more than 0 (true)
Step_2807: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2808: Checking a variable “count” more than 0 (true)
Step_2809: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2810: Checking a variable “count” more than 0 (true)
Step_2811: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2812: Checking a variable “count” more than 0 (false)
Step_2813: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2814: Print variable (count)(needle1)(needle3)
Step_2815: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2816: Checking a variable “count” more than 0 (false)
Step_2817: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2818: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2819: Print variable (count)(needle1)(needle3)
Step_2820: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2821: Checking a variable “count” more than 0 (true)
Step_2822: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2823: Checking a variable “count” more than 0 (false)
Step_2824: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2825: Print variable (count)(needle1)(needle3)
Step_2826: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2827: Checking a variable “count” more than 0 (false)
Step_2828: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2829: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2830: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2831: Print variable (count)(needle1)(needle3)
Step_2832: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2833: Checking a variable “count” more than 0 (true)
Step_2834: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2835: Checking a variable “count” more than 0 (true)
Step_2836: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2837: Checking a variable “count” more than 0 (false)
Step_2838: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2839: Print variable (count)(needle1)(needle3)
Step_2840: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2841: Checking a variable “count” more than 0 (false)
Step_2842: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2843: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2844: Print variable (count)(needle1)(needle3)
Step_2845: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2846: Checking a variable “count” more than 0 (true)
Step_2847: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2848: Checking a variable “count” more than 0 (false)
Step_2849: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2850: Print variable (count)(needle1)(needle3)
Step_2851: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2852: Checking a variable “count” more than 0 (false)
Step_2853: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2854: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2855: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2856: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2857: Print variable (count)(needle1)(needle3)
Step_2858: (7) New recursive function (count = 3, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2859: Checking a variable “count” more than 0 (true)
Step_2860: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2861: Checking a variable “count” more than 0 (true)
Step_2862: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2863: Checking a variable “count” more than 0 (true)
Step_2864: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2865: Checking a variable “count” more than 0 (false)
Step_2866: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2867: Print variable (count)(needle1)(needle3)
Step_2868: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2869: Checking a variable “count” more than 0 (false)
Step_2870: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2871: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2872: Print variable (count)(needle1)(needle3)
Step_2873: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2874: Checking a variable “count” more than 0 (true)
Step_2875: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2876: Checking a variable “count” more than 0 (false)
Step_2877: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2878: Print variable (count)(needle1)(needle3)
Step_2879: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2880: Checking a variable “count” more than 0 (false)
Step_2881: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2882: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2883: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2884: Print variable (count)(needle1)(needle3)
Step_2885: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2886: Checking a variable “count” more than 0 (true)
Step_2887: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2888: Checking a variable “count” more than 0 (true)
Step_2889: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2890: Checking a variable “count” more than 0 (false)
Step_2891: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2892: Print variable (count)(needle1)(needle3)
Step_2893: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2894: Checking a variable “count” more than 0 (false)
Step_2895: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2896: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2897: Print variable (count)(needle1)(needle3)
Step_2898: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2899: Checking a variable “count” more than 0 (true)
Step_2900: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2901: Checking a variable “count” more than 0 (false)
Step_2902: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2903: Print variable (count)(needle1)(needle3)
Step_2904: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2905: Checking a variable “count” more than 0 (false)
Step_2906: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2907: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2908: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2909: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2910: (6) Collapsing recursive function (count = 4, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2911: (5) Collapsing recursive function (count = 5, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2912: Print variable (count)(needle1)(needle3)
Step_2913: (5) New recursive function (count = 5, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2914: Checking a variable “count” more than 0 (true)
Step_2915: (6) New recursive function (count = 4, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2916: Checking a variable “count” more than 0 (true)
Step_2917: (7) New recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2918: Checking a variable “count” more than 0 (true)
Step_2919: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2920: Checking a variable “count” more than 0 (true)
Step_2921: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2922: Checking a variable “count” more than 0 (true)
Step_2923: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2924: Checking a variable “count” more than 0 (false)
Step_2925: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2926: Print variable (count)(needle1)(needle3)
Step_2927: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2928: Checking a variable “count” more than 0 (false)
Step_2929: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2930: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2931: Print variable (count)(needle1)(needle3)
Step_2932: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2933: Checking a variable “count” more than 0 (true)
Step_2934: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2935: Checking a variable “count” more than 0 (false)
Step_2936: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2937: Print variable (count)(needle1)(needle3)
Step_2938: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2939: Checking a variable “count” more than 0 (false)
Step_2940: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2941: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2942: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2943: Print variable (count)(needle1)(needle3)
Step_2944: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2945: Checking a variable “count” more than 0 (true)
Step_2946: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2947: Checking a variable “count” more than 0 (true)
Step_2948: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2949: Checking a variable “count” more than 0 (false)
Step_2950: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2951: Print variable (count)(needle1)(needle3)
Step_2952: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2953: Checking a variable “count” more than 0 (false)
Step_2954: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2955: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2956: Print variable (count)(needle1)(needle3)
Step_2957: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2958: Checking a variable “count” more than 0 (true)
Step_2959: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2960: Checking a variable “count” more than 0 (false)
Step_2961: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2962: Print variable (count)(needle1)(needle3)
Step_2963: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2964: Checking a variable “count” more than 0 (false)
Step_2965: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2966: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2967: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2968: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2969: Print variable (count)(needle1)(needle3)
Step_2970: (7) New recursive function (count = 3, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2971: Checking a variable “count” more than 0 (true)
Step_2972: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2973: Checking a variable “count” more than 0 (true)
Step_2974: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2975: Checking a variable “count” more than 0 (true)
Step_2976: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2977: Checking a variable “count” more than 0 (false)
Step_2978: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2979: Print variable (count)(needle1)(needle3)
Step_2980: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2981: Checking a variable “count” more than 0 (false)
Step_2982: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_2983: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2984: Print variable (count)(needle1)(needle3)
Step_2985: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2986: Checking a variable “count” more than 0 (true)
Step_2987: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2988: Checking a variable “count” more than 0 (false)
Step_2989: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_2990: Print variable (count)(needle1)(needle3)
Step_2991: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_2992: Checking a variable “count” more than 0 (false)
Step_2993: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2994: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_2995: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_2996: Print variable (count)(needle1)(needle3)
Step_2997: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_2998: Checking a variable “count” more than 0 (true)
Step_2999: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3000: Checking a variable “count” more than 0 (true)
Step_3001: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3002: Checking a variable “count” more than 0 (false)
Step_3003: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3004: Print variable (count)(needle1)(needle3)
Step_3005: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3006: Checking a variable “count” more than 0 (false)
Step_3007: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3008: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3009: Print variable (count)(needle1)(needle3)
Step_3010: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3011: Checking a variable “count” more than 0 (true)
Step_3012: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3013: Checking a variable “count” more than 0 (false)
Step_3014: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3015: Print variable (count)(needle1)(needle3)
Step_3016: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3017: Checking a variable “count” more than 0 (false)
Step_3018: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3019: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3020: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3021: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3022: (6) Collapsing recursive function (count = 4, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3023: Print variable (count)(needle1)(needle3)
Step_3024: (6) New recursive function (count = 4, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3025: Checking a variable “count” more than 0 (true)
Step_3026: (7) New recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3027: Checking a variable “count” more than 0 (true)
Step_3028: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3029: Checking a variable “count” more than 0 (true)
Step_3030: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3031: Checking a variable “count” more than 0 (true)
Step_3032: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3033: Checking a variable “count” more than 0 (false)
Step_3034: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3035: Print variable (count)(needle1)(needle3)
Step_3036: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3037: Checking a variable “count” more than 0 (false)
Step_3038: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3039: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3040: Print variable (count)(needle1)(needle3)
Step_3041: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3042: Checking a variable “count” more than 0 (true)
Step_3043: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3044: Checking a variable “count” more than 0 (false)
Step_3045: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3046: Print variable (count)(needle1)(needle3)
Step_3047: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3048: Checking a variable “count” more than 0 (false)
Step_3049: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3050: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3051: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3052: Print variable (count)(needle1)(needle3)
Step_3053: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3054: Checking a variable “count” more than 0 (true)
Step_3055: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3056: Checking a variable “count” more than 0 (true)
Step_3057: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3058: Checking a variable “count” more than 0 (false)
Step_3059: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3060: Print variable (count)(needle1)(needle3)
Step_3061: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3062: Checking a variable “count” more than 0 (false)
Step_3063: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3064: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3065: Print variable (count)(needle1)(needle3)
Step_3066: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3067: Checking a variable “count” more than 0 (true)
Step_3068: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3069: Checking a variable “count” more than 0 (false)
Step_3070: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3071: Print variable (count)(needle1)(needle3)
Step_3072: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3073: Checking a variable “count” more than 0 (false)
Step_3074: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3075: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3076: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3077: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3078: Print variable (count)(needle1)(needle3)
Step_3079: (7) New recursive function (count = 3, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3080: Checking a variable “count” more than 0 (true)
Step_3081: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3082: Checking a variable “count” more than 0 (true)
Step_3083: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3084: Checking a variable “count” more than 0 (true)
Step_3085: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3086: Checking a variable “count” more than 0 (false)
Step_3087: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3088: Print variable (count)(needle1)(needle3)
Step_3089: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3090: Checking a variable “count” more than 0 (false)
Step_3091: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3092: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3093: Print variable (count)(needle1)(needle3)
Step_3094: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3095: Checking a variable “count” more than 0 (true)
Step_3096: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3097: Checking a variable “count” more than 0 (false)
Step_3098: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3099: Print variable (count)(needle1)(needle3)
Step_3100: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3101: Checking a variable “count” more than 0 (false)
Step_3102: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3103: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3104: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3105: Print variable (count)(needle1)(needle3)
Step_3106: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3107: Checking a variable “count” more than 0 (true)
Step_3108: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3109: Checking a variable “count” more than 0 (true)
Step_3110: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3111: Checking a variable “count” more than 0 (false)
Step_3112: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3113: Print variable (count)(needle1)(needle3)
Step_3114: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3115: Checking a variable “count” more than 0 (false)
Step_3116: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3117: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3118: Print variable (count)(needle1)(needle3)
Step_3119: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3120: Checking a variable “count” more than 0 (true)
Step_3121: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3122: Checking a variable “count” more than 0 (false)
Step_3123: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3124: Print variable (count)(needle1)(needle3)
Step_3125: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3126: Checking a variable “count” more than 0 (false)
Step_3127: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3128: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3129: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3130: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3131: (6) Collapsing recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3132: (5) Collapsing recursive function (count = 5, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3133: (4) Collapsing recursive function (count = 6, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3134: Print variable (count)(needle1)(needle3)
Step_3135: (4) New recursive function (count = 6, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3136: Checking a variable “count” more than 0 (true)
Step_3137: (5) New recursive function (count = 5, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3138: Checking a variable “count” more than 0 (true)
Step_3139: (6) New recursive function (count = 4, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3140: Checking a variable “count” more than 0 (true)
Step_3141: (7) New recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3142: Checking a variable “count” more than 0 (true)
Step_3143: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3144: Checking a variable “count” more than 0 (true)
Step_3145: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3146: Checking a variable “count” more than 0 (true)
Step_3147: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3148: Checking a variable “count” more than 0 (false)
Step_3149: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3150: Print variable (count)(needle1)(needle3)
Step_3151: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3152: Checking a variable “count” more than 0 (false)
Step_3153: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3154: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3155: Print variable (count)(needle1)(needle3)
Step_3156: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3157: Checking a variable “count” more than 0 (true)
Step_3158: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3159: Checking a variable “count” more than 0 (false)
Step_3160: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3161: Print variable (count)(needle1)(needle3)
Step_3162: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3163: Checking a variable “count” more than 0 (false)
Step_3164: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3165: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3166: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3167: Print variable (count)(needle1)(needle3)
Step_3168: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3169: Checking a variable “count” more than 0 (true)
Step_3170: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3171: Checking a variable “count” more than 0 (true)
Step_3172: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3173: Checking a variable “count” more than 0 (false)
Step_3174: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3175: Print variable (count)(needle1)(needle3)
Step_3176: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3177: Checking a variable “count” more than 0 (false)
Step_3178: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3179: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3180: Print variable (count)(needle1)(needle3)
Step_3181: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3182: Checking a variable “count” more than 0 (true)
Step_3183: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3184: Checking a variable “count” more than 0 (false)
Step_3185: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3186: Print variable (count)(needle1)(needle3)
Step_3187: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3188: Checking a variable “count” more than 0 (false)
Step_3189: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3190: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3191: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3192: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3193: Print variable (count)(needle1)(needle3)
Step_3194: (7) New recursive function (count = 3, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3195: Checking a variable “count” more than 0 (true)
Step_3196: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3197: Checking a variable “count” more than 0 (true)
Step_3198: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3199: Checking a variable “count” more than 0 (true)
Step_3200: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3201: Checking a variable “count” more than 0 (false)
Step_3202: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3203: Print variable (count)(needle1)(needle3)
Step_3204: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3205: Checking a variable “count” more than 0 (false)
Step_3206: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3207: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3208: Print variable (count)(needle1)(needle3)
Step_3209: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3210: Checking a variable “count” more than 0 (true)
Step_3211: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3212: Checking a variable “count” more than 0 (false)
Step_3213: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3214: Print variable (count)(needle1)(needle3)
Step_3215: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3216: Checking a variable “count” more than 0 (false)
Step_3217: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3218: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3219: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3220: Print variable (count)(needle1)(needle3)
Step_3221: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3222: Checking a variable “count” more than 0 (true)
Step_3223: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3224: Checking a variable “count” more than 0 (true)
Step_3225: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3226: Checking a variable “count” more than 0 (false)
Step_3227: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3228: Print variable (count)(needle1)(needle3)
Step_3229: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3230: Checking a variable “count” more than 0 (false)
Step_3231: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3232: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3233: Print variable (count)(needle1)(needle3)
Step_3234: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3235: Checking a variable “count” more than 0 (true)
Step_3236: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3237: Checking a variable “count” more than 0 (false)
Step_3238: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3239: Print variable (count)(needle1)(needle3)
Step_3240: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3241: Checking a variable “count” more than 0 (false)
Step_3242: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3243: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3244: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3245: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3246: (6) Collapsing recursive function (count = 4, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3247: Print variable (count)(needle1)(needle3)
Step_3248: (6) New recursive function (count = 4, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3249: Checking a variable “count” more than 0 (true)
Step_3250: (7) New recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3251: Checking a variable “count” more than 0 (true)
Step_3252: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3253: Checking a variable “count” more than 0 (true)
Step_3254: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3255: Checking a variable “count” more than 0 (true)
Step_3256: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3257: Checking a variable “count” more than 0 (false)
Step_3258: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3259: Print variable (count)(needle1)(needle3)
Step_3260: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3261: Checking a variable “count” more than 0 (false)
Step_3262: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3263: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3264: Print variable (count)(needle1)(needle3)
Step_3265: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3266: Checking a variable “count” more than 0 (true)
Step_3267: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3268: Checking a variable “count” more than 0 (false)
Step_3269: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3270: Print variable (count)(needle1)(needle3)
Step_3271: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3272: Checking a variable “count” more than 0 (false)
Step_3273: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3274: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3275: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3276: Print variable (count)(needle1)(needle3)
Step_3277: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3278: Checking a variable “count” more than 0 (true)
Step_3279: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3280: Checking a variable “count” more than 0 (true)
Step_3281: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3282: Checking a variable “count” more than 0 (false)
Step_3283: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3284: Print variable (count)(needle1)(needle3)
Step_3285: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3286: Checking a variable “count” more than 0 (false)
Step_3287: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3288: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3289: Print variable (count)(needle1)(needle3)
Step_3290: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3291: Checking a variable “count” more than 0 (true)
Step_3292: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3293: Checking a variable “count” more than 0 (false)
Step_3294: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3295: Print variable (count)(needle1)(needle3)
Step_3296: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3297: Checking a variable “count” more than 0 (false)
Step_3298: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3299: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3300: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3301: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3302: Print variable (count)(needle1)(needle3)
Step_3303: (7) New recursive function (count = 3, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3304: Checking a variable “count” more than 0 (true)
Step_3305: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3306: Checking a variable “count” more than 0 (true)
Step_3307: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3308: Checking a variable “count” more than 0 (true)
Step_3309: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3310: Checking a variable “count” more than 0 (false)
Step_3311: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3312: Print variable (count)(needle1)(needle3)
Step_3313: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3314: Checking a variable “count” more than 0 (false)
Step_3315: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3316: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3317: Print variable (count)(needle1)(needle3)
Step_3318: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3319: Checking a variable “count” more than 0 (true)
Step_3320: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3321: Checking a variable “count” more than 0 (false)
Step_3322: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3323: Print variable (count)(needle1)(needle3)
Step_3324: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3325: Checking a variable “count” more than 0 (false)
Step_3326: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3327: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3328: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3329: Print variable (count)(needle1)(needle3)
Step_3330: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3331: Checking a variable “count” more than 0 (true)
Step_3332: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3333: Checking a variable “count” more than 0 (true)
Step_3334: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3335: Checking a variable “count” more than 0 (false)
Step_3336: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3337: Print variable (count)(needle1)(needle3)
Step_3338: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3339: Checking a variable “count” more than 0 (false)
Step_3340: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3341: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3342: Print variable (count)(needle1)(needle3)
Step_3343: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3344: Checking a variable “count” more than 0 (true)
Step_3345: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3346: Checking a variable “count” more than 0 (false)
Step_3347: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3348: Print variable (count)(needle1)(needle3)
Step_3349: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3350: Checking a variable “count” more than 0 (false)
Step_3351: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3352: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3353: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3354: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3355: (6) Collapsing recursive function (count = 4, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3356: (5) Collapsing recursive function (count = 5, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3357: Print variable (count)(needle1)(needle3)
Step_3358: (5) New recursive function (count = 5, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3359: Checking a variable “count” more than 0 (true)
Step_3360: (6) New recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3361: Checking a variable “count” more than 0 (true)
Step_3362: (7) New recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3363: Checking a variable “count” more than 0 (true)
Step_3364: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3365: Checking a variable “count” more than 0 (true)
Step_3366: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3367: Checking a variable “count” more than 0 (true)
Step_3368: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3369: Checking a variable “count” more than 0 (false)
Step_3370: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3371: Print variable (count)(needle1)(needle3)
Step_3372: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3373: Checking a variable “count” more than 0 (false)
Step_3374: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3375: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3376: Print variable (count)(needle1)(needle3)
Step_3377: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3378: Checking a variable “count” more than 0 (true)
Step_3379: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3380: Checking a variable “count” more than 0 (false)
Step_3381: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3382: Print variable (count)(needle1)(needle3)
Step_3383: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3384: Checking a variable “count” more than 0 (false)
Step_3385: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3386: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3387: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3388: Print variable (count)(needle1)(needle3)
Step_3389: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3390: Checking a variable “count” more than 0 (true)
Step_3391: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3392: Checking a variable “count” more than 0 (true)
Step_3393: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3394: Checking a variable “count” more than 0 (false)
Step_3395: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3396: Print variable (count)(needle1)(needle3)
Step_3397: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3398: Checking a variable “count” more than 0 (false)
Step_3399: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3400: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3401: Print variable (count)(needle1)(needle3)
Step_3402: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3403: Checking a variable “count” more than 0 (true)
Step_3404: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3405: Checking a variable “count” more than 0 (false)
Step_3406: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3407: Print variable (count)(needle1)(needle3)
Step_3408: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3409: Checking a variable “count” more than 0 (false)
Step_3410: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3411: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3412: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3413: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3414: Print variable (count)(needle1)(needle3)
Step_3415: (7) New recursive function (count = 3, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3416: Checking a variable “count” more than 0 (true)
Step_3417: (8) New recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3418: Checking a variable “count” more than 0 (true)
Step_3419: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3420: Checking a variable “count” more than 0 (true)
Step_3421: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3422: Checking a variable “count” more than 0 (false)
Step_3423: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3424: Print variable (count)(needle1)(needle3)
Step_3425: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3426: Checking a variable “count” more than 0 (false)
Step_3427: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3428: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3429: Print variable (count)(needle1)(needle3)
Step_3430: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3431: Checking a variable “count” more than 0 (true)
Step_3432: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3433: Checking a variable “count” more than 0 (false)
Step_3434: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3435: Print variable (count)(needle1)(needle3)
Step_3436: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3437: Checking a variable “count” more than 0 (false)
Step_3438: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3439: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3440: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3441: Print variable (count)(needle1)(needle3)
Step_3442: (8) New recursive function (count = 2, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3443: Checking a variable “count” more than 0 (true)
Step_3444: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3445: Checking a variable “count” more than 0 (true)
Step_3446: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3447: Checking a variable “count” more than 0 (false)
Step_3448: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3449: Print variable (count)(needle1)(needle3)
Step_3450: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3451: Checking a variable “count” more than 0 (false)
Step_3452: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3453: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3454: Print variable (count)(needle1)(needle3)
Step_3455: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3456: Checking a variable “count” more than 0 (true)
Step_3457: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3458: Checking a variable “count” more than 0 (false)
Step_3459: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3460: Print variable (count)(needle1)(needle3)
Step_3461: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3462: Checking a variable “count” more than 0 (false)
Step_3463: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3464: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3465: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3466: (7) Collapsing recursive function (count = 3, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3467: (6) Collapsing recursive function (count = 4, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3468: Print variable (count)(needle1)(needle3)
Step_3469: (6) New recursive function (count = 4, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3470: Checking a variable “count” more than 0 (true)
Step_3471: (7) New recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3472: Checking a variable “count” more than 0 (true)
Step_3473: (8) New recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3474: Checking a variable “count” more than 0 (true)
Step_3475: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3476: Checking a variable “count” more than 0 (true)
Step_3477: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3478: Checking a variable “count” more than 0 (false)
Step_3479: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3480: Print variable (count)(needle1)(needle3)
Step_3481: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3482: Checking a variable “count” more than 0 (false)
Step_3483: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3484: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3485: Print variable (count)(needle1)(needle3)
Step_3486: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3487: Checking a variable “count” more than 0 (true)
Step_3488: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3489: Checking a variable “count” more than 0 (false)
Step_3490: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3491: Print variable (count)(needle1)(needle3)
Step_3492: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3493: Checking a variable “count” more than 0 (false)
Step_3494: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3495: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3496: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3497: Print variable (count)(needle1)(needle3)
Step_3498: (8) New recursive function (count = 2, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3499: Checking a variable “count” more than 0 (true)
Step_3500: (9) New recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3501: Checking a variable “count” more than 0 (true)
Step_3502: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3503: Checking a variable “count” more than 0 (false)
Step_3504: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3505: Print variable (count)(needle1)(needle3)
Step_3506: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3507: Checking a variable “count” more than 0 (false)
Step_3508: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3509: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3510: Print variable (count)(needle1)(needle3)
Step_3511: (9) New recursive function (count = 1, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3512: Checking a variable “count” more than 0 (true)
Step_3513: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3514: Checking a variable “count” more than 0 (false)
Step_3515: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3516: Print variable (count)(needle1)(needle3)
Step_3517: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3518: Checking a variable “count” more than 0 (false)
Step_3519: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3520: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3521: (8) Collapsing recursive function (count = 2, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3522: (7) Collapsing recursive function (count = 3, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3523: Print variable (count)(needle1)(needle3)
Step_3524: (7) New recursive function (count = 3, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3525: Checking a variable “count” more than 0 (true)
Step_3526: (8) New recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3527: Checking a variable “count” more than 0 (true)
Step_3528: (9) New recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3529: Checking a variable “count” more than 0 (true)
Step_3530: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3531: Checking a variable “count” more than 0 (false)
Step_3532: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3533: Print variable (count)(needle1)(needle3)
Step_3534: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3535: Checking a variable “count” more than 0 (false)
Step_3536: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3537: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3538: Print variable (count)(needle1)(needle3)
Step_3539: (9) New recursive function (count = 1, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3540: Checking a variable “count” more than 0 (true)
Step_3541: (10) New recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3542: Checking a variable “count” more than 0 (false)
Step_3543: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3544: Print variable (count)(needle1)(needle3)
Step_3545: (10) New recursive function (count = 0, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3546: Checking a variable “count” more than 0 (false)
Step_3547: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3548: (9) Collapsing recursive function (count = 1, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3549: (8) Collapsing recursive function (count = 2, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3550: Print variable (count)(needle1)(needle3)
Step_3551: (8) New recursive function (count = 2, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3552: Checking a variable “count” more than 0 (true)
Step_3553: (9) New recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3554: Checking a variable “count” more than 0 (true)
Step_3555: (10) New recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3556: Checking a variable “count” more than 0 (false)
Step_3557: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3558: Print variable (count)(needle1)(needle3)
Step_3559: (10) New recursive function (count = 0, needle1 = 3, needle2 = 1, needle3 = 2)
Step_3560: Checking a variable “count” more than 0 (false)
Step_3561: (10) Collapsing recursive function (count = 0, needle1 = 3, needle2 = 2, needle3 = 1)
Step_3562: (9) Collapsing recursive function (count = 1, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3563: Print variable (count)(needle1)(needle3)
Step_3564: (9) New recursive function (count = 1, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3565: Checking a variable “count” more than 0 (true)
Step_3566: (10) New recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3567: Checking a variable “count” more than 0 (false)
Step_3568: (10) Collapsing recursive function (count = 0, needle1 = 1, needle2 = 3, needle3 = 2)
Step_3569: Print variable (count)(needle1)(needle3)
Step_3570: (10) New recursive function (count = 0, needle1 = 2, needle2 = 3, needle3 = 1)
Step_3571: Checking a variable “count” more than 0 (false)
Step_3572: (10) Collapsing recursive function (count = 0, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3573: (9) Collapsing recursive function (count = 1, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3574: (8) Collapsing recursive function (count = 2, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3575: (7) Collapsing recursive function (count = 3, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3576: (6) Collapsing recursive function (count = 4, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3577: (5) Collapsing recursive function (count = 5, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3578: (4) Collapsing recursive function (count = 6, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3579: (3) Collapsing recursive function (count = 7, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3580: (2) Collapsing recursive function (count = 8, needle1 = 2, needle2 = 1, needle3 = 3)
Step_3581: (1) Collapsing recursive function (count = 9, needle1 = 1, needle2 = 2, needle3 = 3)
Step_3582: Exit from the program
